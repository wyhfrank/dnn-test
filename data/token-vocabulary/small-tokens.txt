(def_block
r_class
id|cpp_typedef_runme
(brace
(brace
r_try
(brace
id|System
dot
id|loadLibrary
c_func
(paren
l_string|&quot;cpp_typedef&quot;
)paren
suffix:semicolon
)brace
r_catch
(paren
id|UnsatisfiedLinkError
id|e
)paren
(brace
id|System.err
dot
id|println
c_func
(paren
l_string|&quot;Native code library failed to load. See the chapter on Dynamic Linking Problems in the SWIG Java documentation for help.&bslash;n&quot;
op_plus
id|e
)paren
suffix:semicolon
id|System
dot
id|exit
c_func
(paren
l_int|1
)paren
suffix:semicolon
)brace
)brace
(def_block
r_void
id|main
c_func
(paren
id|String
id|argv
(braket
)braket
)paren
(brace
id|Test
id|test
op_assign
r_new
id|Test
c_func
(paren
)paren
suffix:semicolon
id|UnnamedStruct
id|unnamed
op_assign
r_new
id|UnnamedStruct
c_func
(paren
)paren
suffix:semicolon
id|TypedefNamedStruct
id|named
op_assign
r_new
id|TypedefNamedStruct
c_func
(paren
)paren
suffix:semicolon
id|UnnamedStruct
id|unnamed2
op_assign
id|test
dot
id|test1
c_func
(paren
id|unnamed
)paren
suffix:semicolon
id|TypedefNamedStruct
id|named2
op_assign
id|test
dot
id|test2
c_func
(paren
id|named
)paren
suffix:semicolon
id|TypedefNamedStruct
id|named3
op_assign
id|test
dot
id|test3
c_func
(paren
id|named
)paren
suffix:semicolon
id|TypedefNamedStruct
id|named4
op_assign
id|test
dot
id|test4
c_func
(paren
id|named
)paren
suffix:semicolon
)brace
)def_block
)brace
)def_block
eof
(def_block
r_class
id|Main
(brace
(def_block
id|Main
c_func
(paren
id|WOContext
id|context
)paren
(brace
id|super
c_func
(paren
id|context
)paren
suffix:semicolon
)brace
)def_block
(def_block
r_boolean
id|isStateless
c_func
(paren
)paren
(brace
r_return
l_bool|true
suffix:semicolon
)brace
)def_block
)brace
)def_block
eof
(def_block
r_class
id|DomainTheoryGrammar
(brace
)brace
)def_block
eof
(def_block
r_class
id|TokenMgrError
(brace
(def_block
id|String
id|addEscapes
c_func
(paren
id|String
id|str
)paren
(brace
id|StringBuffer
id|retval
op_assign
r_new
id|StringBuffer
c_func
(paren
)paren
suffix:semicolon
r_char
id|ch
suffix:semicolon
r_for
c_loop
(paren
r_int
id|i
op_assign
l_int|0
suffix:semicolon
id|i
OL
id|str
dot
m_length
suffix:semicolon
id|i
op_increment
)paren
(brace
r_switch
c_cond
(paren
id|str
dot
m_charAt
c_func
(paren
id|i
)paren
)paren
(brace
r_case
l_int|0
suffix:colon
(brace
r_continue
suffix:semicolon
)brace
r_case
l_char|&squot;&bslash;b&squot;
suffix:colon
(brace
id|retval
dot
id|append
c_func
(paren
l_string|&quot;&bslash;&bslash;b&quot;
)paren
suffix:semicolon
r_continue
suffix:semicolon
)brace
r_case
l_char|&squot;&bslash;t&squot;
suffix:colon
(brace
id|retval
dot
id|append
c_func
(paren
l_string|&quot;&bslash;&bslash;t&quot;
)paren
suffix:semicolon
r_continue
suffix:semicolon
)brace
r_case
l_char|&squot;&bslash;n&squot;
suffix:colon
(brace
id|retval
dot
id|append
c_func
(paren
l_string|&quot;&bslash;&bslash;n&quot;
)paren
suffix:semicolon
r_continue
suffix:semicolon
)brace
r_case
l_char|&squot;&bslash;f&squot;
suffix:colon
(brace
id|retval
dot
id|append
c_func
(paren
l_string|&quot;&bslash;&bslash;f&quot;
)paren
suffix:semicolon
r_continue
suffix:semicolon
)brace
r_case
l_char|&squot;&bslash;r&squot;
suffix:colon
(brace
id|retval
dot
id|append
c_func
(paren
l_string|&quot;&bslash;&bslash;r&quot;
)paren
suffix:semicolon
r_continue
suffix:semicolon
)brace
r_case
l_char|&squot;&bslash;&quot;&squot;
suffix:colon
(brace
id|retval
dot
id|append
c_func
(paren
l_string|&quot;&bslash;&bslash;&bslash;&quot;&quot;
)paren
suffix:semicolon
r_continue
suffix:semicolon
)brace
r_case
l_char|&squot;&bslash;&squot;&squot;
suffix:colon
(brace
id|retval
dot
id|append
c_func
(paren
l_string|&quot;&bslash;&bslash;&bslash;&squot;&quot;
)paren
suffix:semicolon
r_continue
suffix:semicolon
)brace
r_case
l_char|&squot;&bslash;&bslash;&squot;
suffix:colon
(brace
id|retval
dot
id|append
c_func
(paren
l_string|&quot;&bslash;&bslash;&bslash;&bslash;&quot;
)paren
suffix:semicolon
r_continue
suffix:semicolon
)brace
r_default
suffix:colon
(brace
r_if
c_cond
(paren
(paren
id|ch
op_assign
id|str
dot
m_charAt
c_func
(paren
id|i
)paren
)paren
OL
l_int|0x20
op_logical_or
id|ch
OG
l_int|0x7e
)paren
(brace
id|String
id|s
op_assign
l_string|&quot;0000&quot;
op_plus
id|Integer
dot
m_toString
c_func
(paren
id|ch
comma
l_int|16
)paren
suffix:semicolon
id|retval
dot
id|append
c_func
(paren
l_string|&quot;&bslash;&bslash;u&quot;
op_plus
id|s
dot
id|substring
c_func
(paren
id|s
dot
m_length
l_int|4
comma
id|s
dot
m_length
)paren
)paren
suffix:semicolon
)brace
r_else
(brace
id|retval
dot
id|append
c_func
(paren
id|ch
)paren
suffix:semicolon
)brace
r_continue
suffix:semicolon
)brace
)brace
)brace
r_return
id|retval
dot
m_toString
c_func
(paren
)paren
suffix:semicolon
)brace
)def_block
(def_block
id|String
id|LexicalError
c_func
(paren
r_boolean
id|EOFSeen
comma
r_int
id|lexState
comma
r_int
id|errorLine
comma
r_int
id|errorColumn
comma
id|String
id|errorAfter
comma
r_char
id|curChar
)paren
(brace
r_return
l_string|&quot;Lexical error at line &quot;
op_plus
id|errorLine
op_plus
l_string|&quot;, column &quot;
op_plus
id|errorColumn
op_plus
l_string|&quot;.  Encountered: &quot;
op_plus
(paren
id|EOFSeen
ques
c_cond
l_string|&quot;&lt;EOF&gt; &quot;
suffix:colon
(paren
l_string|&quot;&bslash;&quot;&quot;
op_plus
id|addEscapes
c_func
(paren
id|String
dot
id|valueOf
c_func
(paren
id|curChar
)paren
)paren
op_plus
l_string|&quot;&bslash;&quot;&quot;
)paren
op_plus
l_string|&quot; (&quot;
op_plus
(paren
r_int
)paren
id|curChar
op_plus
l_string|&quot;), &quot;
)paren
op_plus
l_string|&quot;after : &bslash;&quot;&quot;
op_plus
id|addEscapes
c_func
(paren
id|errorAfter
)paren
op_plus
l_string|&quot;&bslash;&quot;&quot;
suffix:semicolon
)brace
)def_block
(def_block
id|TokenMgrError
c_func
(paren
)paren
(brace
)brace
)def_block
(def_block
id|TokenMgrError
c_func
(paren
id|String
id|message
comma
r_int
id|reason
)paren
(brace
id|super
c_func
(paren
id|message
)paren
suffix:semicolon
id|errorCode
op_assign
id|reason
suffix:semicolon
)brace
)def_block
(def_block
id|TokenMgrError
c_func
(paren
r_boolean
id|EOFSeen
comma
r_int
id|lexState
comma
r_int
id|errorLine
comma
r_int
id|errorColumn
comma
id|String
id|errorAfter
comma
r_char
id|curChar
comma
r_int
id|reason
)paren
(brace
id|this
c_func
(paren
id|LexicalError
c_func
(paren
id|EOFSeen
comma
id|lexState
comma
id|errorLine
comma
id|errorColumn
comma
id|errorAfter
comma
id|curChar
)paren
comma
id|reason
)paren
suffix:semicolon
)brace
)def_block
)brace
)def_block
eof
(def_block
r_class
id|T6862608a
(brace
(def_block
id|Comparator&lt;T&gt;
id|compound
c_func
(paren
id|Iterable&lt;?extendsComparator&lt;?superT&gt;&gt;
id|it
)paren
(brace
r_return
r_null
suffix:semicolon
)brace
)def_block
(def_block
r_void
id|test
c_func
(paren
id|List&lt;Comparator&lt;?&gt;&gt;
id|x
)paren
(brace
id|Comparator&lt;String&gt;
id|c3
op_assign
id|compound
c_func
(paren
id|x
)paren
suffix:semicolon
)brace
)def_block
)brace
)def_block
eof
(def_block
r_class
id|FuncHeaderPrinter
(brace
(def_block
r_void
id|print
c_func
(paren
id|String
id|name
comma
id|FuncExits
id|ex
comma
id|FuncFeatures
id|f
comma
id|Events
id|ev
comma
id|CppIncludes
id|i
comma
id|CppData
id|d
comma
id|CppMethods
id|m
comma
r_boolean
id|genStubs
)paren
(brace
id|FileOutputStream
id|out
op_assign
r_null
suffix:semicolon
id|PrintStream
id|file
op_assign
r_null
suffix:semicolon
r_try
(brace
id|out
op_assign
r_new
id|FileOutputStream
c_func
(paren
l_string|&quot;llt_&quot;
op_plus
id|name
op_plus
l_string|&quot;.hh&quot;
)paren
suffix:semicolon
id|file
op_assign
r_new
id|PrintStream
c_func
(paren
id|out
)paren
suffix:semicolon
)brace
r_catch
(paren
id|FileNotFoundException
id|e
)paren
(brace
id|System.err
dot
id|println
c_func
(paren
l_string|&quot;Specified file &quot;
op_plus
id|name
op_plus
l_string|&quot; does not exist.&quot;
)paren
suffix:semicolon
id|System
dot
id|exit
c_func
(paren
l_int|1
)paren
suffix:semicolon
)brace
id|file
dot
id|println
c_func
(paren
l_string|&quot;#ifndef LLT_&quot;
op_plus
id|name
dot
id|toUpperCase
c_func
(paren
)paren
op_plus
l_string|&quot;_H&quot;
)paren
suffix:semicolon
id|file
dot
id|println
c_func
(paren
l_string|&quot;#define LLT_&quot;
op_plus
id|name
dot
id|toUpperCase
c_func
(paren
)paren
op_plus
l_string|&quot;_H&quot;
)paren
suffix:semicolon
id|file
dot
id|println
c_func
(paren
)paren
suffix:semicolon
r_if
c_cond
(paren
id|f
op_ne
r_null
)paren
(brace
id|f
dot
id|printIncludes
c_func
(paren
id|file
)paren
suffix:semicolon
)brace
r_if
c_cond
(paren
id|ev
op_ne
r_null
)paren
(brace
id|file
dot
id|println
c_func
(paren
l_string|&quot;#include &lt;lee/Event.hh&gt;&quot;
)paren
suffix:semicolon
id|file
dot
id|println
c_func
(paren
l_string|&quot;#include &lt;lee/Context.hh&gt;&quot;
)paren
suffix:semicolon
id|file
dot
id|println
c_func
(paren
l_string|&quot;#include &lt;lee/Subscription.hh&gt;&quot;
)paren
suffix:semicolon
)brace
r_if
c_cond
(paren
id|i
op_ne
r_null
)paren
(brace
id|i
dot
id|print
c_func
(paren
id|file
)paren
suffix:semicolon
)brace
id|file
dot
id|println
c_func
(paren
l_string|&quot;#include &lt;assert.h&gt;&quot;
)paren
suffix:semicolon
id|file
dot
id|println
c_func
(paren
l_string|&quot;#include &lt;lee/Function.hh&gt;&quot;
)paren
suffix:semicolon
id|file
dot
id|println
c_func
(paren
)paren
suffix:semicolon
id|file
dot
id|println
c_func
(paren
l_string|&quot;namespace userFunction {&quot;
)paren
suffix:semicolon
id|file
dot
id|println
c_func
(paren
)paren
suffix:semicolon
id|file
dot
id|print
c_func
(paren
l_string|&quot;class &quot;
op_plus
id|name
)paren
suffix:semicolon
r_if
c_cond
(paren
id|f
op_ne
r_null
)paren
(brace
id|f
dot
id|print
c_func
(paren
id|file
)paren
suffix:semicolon
)brace
r_else
(brace
id|file
dot
id|print
c_func
(paren
l_string|&quot; : &quot;
)paren
suffix:semicolon
)brace
r_if
c_cond
(paren
id|ev
op_ne
r_null
)paren
(brace
id|file
dot
id|print
c_func
(paren
l_string|&quot;public lee::Subscription, &quot;
)paren
suffix:semicolon
)brace
id|file
dot
id|println
c_func
(paren
l_string|&quot;public lee::Function&quot;
)paren
suffix:semicolon
id|file
dot
id|println
c_func
(paren
l_string|&quot;{&quot;
)paren
suffix:semicolon
r_if
c_cond
(paren
id|d
op_ne
r_null
)paren
(brace
id|d
dot
id|print
c_func
(paren
id|file
)paren
suffix:semicolon
)brace
id|file
dot
id|println
c_func
(paren
)paren
suffix:semicolon
r_if
c_cond
(paren
id|m
op_ne
r_null
)paren
(brace
id|m
dot
id|print
c_func
(paren
id|file
)paren
suffix:semicolon
)brace
r_if
c_cond
(paren
id|ex
op_ne
r_null
)paren
(brace
id|ex
dot
id|print
c_func
(paren
id|file
)paren
suffix:semicolon
)brace
r_if
c_cond
(paren
id|ev
op_ne
r_null
)paren
(brace
id|ev
dot
id|printPublish
c_func
(paren
id|file
)paren
suffix:semicolon
id|ev
dot
id|printSubscribe
c_func
(paren
id|file
)paren
suffix:semicolon
)brace
r_if
c_cond
(paren
id|f
op_ne
r_null
)paren
(brace
id|f
dot
id|printPrivs
c_func
(paren
id|file
)paren
suffix:semicolon
)brace
id|printPublic
c_func
(paren
id|file
)paren
suffix:semicolon
id|file
dot
id|print
c_func
(paren
l_string|&quot;&bslash;t&quot;
op_plus
id|name
op_plus
l_string|&quot;(std::string s) : lee::Function(s)&quot;
)paren
suffix:semicolon
r_if
c_cond
(paren
id|d
op_ne
r_null
)paren
(brace
id|d
dot
id|print_init
c_func
(paren
id|file
)paren
suffix:semicolon
)brace
id|file
dot
id|println
c_func
(paren
l_string|&quot; {&quot;
)paren
suffix:semicolon
r_try
(brace
r_if
c_cond
(paren
id|f
op_ne
r_null
)paren
(brace
id|f
dot
id|printSwitches
c_func
(paren
id|file
)paren
suffix:semicolon
)brace
)brace
r_catch
(paren
id|FuncFeatures.BadFeatureParameterException
id|e
)paren
(brace
id|System.err
dot
id|println
c_func
(paren
l_string|&quot;&bslash;nERROR: Feature parameter &bslash;&quot;&quot;
op_plus
id|e
dot
id|getBadParameter
c_func
(paren
)paren
op_plus
l_string|&quot;&bslash;&quot; is not supported.&quot;
)paren
suffix:semicolon
id|System.err
dot
id|println
c_func
(paren
)paren
suffix:semicolon
id|System
dot
id|exit
c_func
(paren
l_int|1
)paren
suffix:semicolon
)brace
r_if
c_cond
(paren
id|ev
op_ne
r_null
)paren
(brace
id|ev
dot
id|printSubscribeRegs
c_func
(paren
id|file
)paren
suffix:semicolon
)brace
id|file
dot
id|println
c_func
(paren
l_string|&quot;&bslash;t}&quot;
)paren
suffix:semicolon
id|file
dot
id|println
c_func
(paren
l_string|&quot;&bslash;tvirtual ~&quot;
op_plus
id|name
op_plus
l_string|&quot;() {}&quot;
)paren
suffix:semicolon
r_if
c_cond
(paren
id|ex
op_ne
r_null
)paren
(brace
id|ex
dot
id|printPubs
c_func
(paren
id|file
)paren
suffix:semicolon
)brace
r_if
c_cond
(paren
id|ev
op_ne
r_null
)paren
(brace
id|ev
dot
id|printSubscribeSwitch
c_func
(paren
id|file
)paren
suffix:semicolon
)brace
r_if
c_cond
(paren
id|f
op_ne
r_null
)paren
(brace
id|f
dot
id|printPubs
c_func
(paren
id|file
)paren
suffix:semicolon
)brace
id|file
dot
id|println
c_func
(paren
l_string|&quot;};&quot;
)paren
suffix:semicolon
id|file
dot
id|println
c_func
(paren
l_string|&quot;}&quot;
)paren
suffix:semicolon
id|file
dot
id|println
c_func
(paren
l_string|&quot;#endif&quot;
)paren
suffix:semicolon
id|file
dot
id|println
c_func
(paren
)paren
suffix:semicolon
r_if
c_cond
(paren
id|genStubs
)paren
(brace
id|String
id|filename
op_assign
l_string|&quot;llt_&quot;
op_plus
id|name
op_plus
l_string|&quot;.cc&quot;
suffix:semicolon
r_try
(brace
id|out
op_assign
r_new
id|FileOutputStream
c_func
(paren
id|filename
)paren
suffix:semicolon
id|file
op_assign
r_new
id|PrintStream
c_func
(paren
id|out
)paren
suffix:semicolon
)brace
r_catch
(paren
id|FileNotFoundException
id|e
)paren
(brace
id|System.err
dot
id|println
c_func
(paren
l_string|&quot;Specified file &quot;
op_plus
id|filename
op_plus
l_string|&quot; does not exist.&quot;
)paren
suffix:semicolon
id|System
dot
id|exit
c_func
(paren
l_int|1
)paren
suffix:semicolon
)brace
id|file
dot
id|println
c_func
(paren
l_string|&quot;#include &bslash;&quot;llt_&quot;
op_plus
id|name
op_plus
l_string|&quot;.hh&bslash;&quot;&quot;
)paren
suffix:semicolon
id|file
dot
id|println
c_func
(paren
)paren
suffix:semicolon
id|file
dot
id|println
c_func
(paren
l_string|&quot;using namespace userFunction;&quot;
)paren
suffix:semicolon
id|file
dot
id|println
c_func
(paren
)paren
suffix:semicolon
id|file
dot
id|println
c_func
(paren
l_string|&quot;void&bslash;nprocessData(lee::PktData * const pkt)&quot;
)paren
suffix:semicolon
id|file
dot
id|println
c_func
(paren
l_string|&quot;{&quot;
)paren
suffix:semicolon
id|file
dot
id|println
c_func
(paren
l_string|&quot;}&quot;
)paren
suffix:semicolon
id|file
dot
id|println
c_func
(paren
)paren
suffix:semicolon
r_if
c_cond
(paren
id|m
op_ne
r_null
)paren
(brace
id|m
dot
id|printStubs
c_func
(paren
id|file
)paren
suffix:semicolon
)brace
r_if
c_cond
(paren
id|ev
op_ne
r_null
)paren
(brace
id|ev
dot
id|printSubscribeStubs
c_func
(paren
id|file
)paren
suffix:semicolon
)brace
)brace
)brace
)def_block
(def_block
r_void
id|printPublic
c_func
(paren
id|PrintStream
id|file
)paren
(brace
id|file
dot
id|println
c_func
(paren
)paren
suffix:semicolon
id|file
dot
id|println
c_func
(paren
l_string|&quot;public:&quot;
)paren
suffix:semicolon
id|file
dot
id|println
c_func
(paren
l_string|&quot;&bslash;tvirtual void processData(lee::PktData * const pkt);&quot;
)paren
suffix:semicolon
)brace
)def_block
)brace
)def_block
eof
(def_block
r_class
id|Transfer
(brace
(def_block
r_void
id|main
c_func
(paren
id|String
id|args
(braket
)braket
)paren
(brace
id|ArrayList&lt;String&gt;
id|pages
op_assign
r_new
id|ArrayList&lt;String&gt;
c_func
(paren
)paren
suffix:semicolon
id|String
id|baseFileName
op_assign
l_string|&quot;E:&bslash;&bslash;Documents&bslash;&bslash;Dropbox&bslash;&bslash;LamrimTheory&bslash;&bslash;UTF-8Page&bslash;&bslash;ptd-&quot;
suffix:semicolon
id|String
id|outputFileBase
op_assign
l_string|&quot;E:&bslash;&bslash;Documents&bslash;&bslash;Dropbox&bslash;&bslash;LamrimTheory&bslash;&bslash;BookSec&bslash;&bslash;&quot;
suffix:semicolon
id|String
id|outputAll
op_assign
r_new
id|String
c_func
(paren
id|outputFileBase
op_plus
l_string|&quot;all.txt&quot;
)paren
suffix:semicolon
id|FileWriter
id|fwa
op_assign
r_new
id|FileWriter
c_func
(paren
id|outputFileBase
op_plus
l_string|&quot;all.txt&quot;
)paren
suffix:semicolon
id|fwa
dot
id|write
c_func
(paren
l_string|&quot;&lt;?xml version=&bslash;&quot;1.0&bslash;&quot; encoding=&bslash;&quot;utf-8&bslash;&quot;?&gt;&bslash;n&lt;resources&gt;&bslash;n&lt;string-array name=&bslash;&quot;book&bslash;&quot;&gt;&bslash;n&quot;
)paren
suffix:semicolon
id|String
id|stemp
op_assign
l_string|&quot;&quot;
suffix:semicolon
id|File
id|f
op_assign
r_null
suffix:semicolon
r_for
c_loop
(paren
r_int
id|i
op_assign
l_int|1
suffix:semicolon
id|i
OL
l_int|25
suffix:semicolon
id|i
op_increment
)paren
(brace
id|lineCount
op_assign
l_int|0
suffix:semicolon
id|stemp
op_assign
l_string|&quot;&quot;
op_plus
id|i
suffix:semicolon
r_if
c_cond
(paren
id|stemp
dot
m_length
op_eq
l_int|1
)paren
(brace
id|stemp
op_assign
l_string|&quot;0&quot;
op_plus
id|stemp
suffix:semicolon
)brace
id|f
op_assign
r_new
id|File
c_func
(paren
id|baseFileName
op_plus
id|stemp
op_plus
l_string|&quot;.htm&quot;
)paren
suffix:semicolon
id|System.out
dot
id|println
c_func
(paren
l_string|&quot;Check: &quot;
op_plus
id|f
dot
id|getAbsolutePath
c_func
(paren
)paren
)paren
suffix:semicolon
id|checkBlock
c_func
(paren
id|f
comma
id|pages
)paren
suffix:semicolon
id|String
id|output
op_assign
l_string|&quot;&quot;
suffix:semicolon
r_if
c_cond
(paren
id|OUT_FORMAT
op_eq
id|FORMAT_RESC
)paren
(brace
id|System.out
dot
id|println
c_func
(paren
l_string|&quot;There are &quot;
op_plus
id|pages
dot
m_length
op_plus
l_string|&quot; pages in the chapter&quot;
)paren
suffix:semicolon
id|output
op_assign
l_string|&quot;&lt;?xml version=&bslash;&quot;1.0&bslash;&quot; encoding=&bslash;&quot;utf-8&bslash;&quot;?&gt;&bslash;n&lt;resources&gt;&bslash;n&lt;string-array name=&bslash;&quot;book&bslash;&quot;&gt;&bslash;n&quot;
suffix:semicolon
r_while
c_loop
(paren
id|pages
dot
m_length
OG
l_int|0
)paren
(brace
id|String
id|s
op_assign
id|pages
dot
id|remove
c_func
(paren
l_int|0
)paren
suffix:semicolon
id|output
op_add_assign
l_string|&quot;&lt;item&gt;&bslash;n&lt;![CDATA[&quot;
op_plus
id|s
op_plus
l_string|&quot;]]&gt;&bslash;n&lt;/item&gt;&bslash;n&quot;
suffix:semicolon
id|fwa
dot
id|write
c_func
(paren
l_string|&quot;&lt;item&gt;&bslash;n&lt;![CDATA[&quot;
op_plus
id|s
op_plus
l_string|&quot;]]&gt;&bslash;n&lt;/item&gt;&bslash;n&quot;
)paren
suffix:semicolon
)brace
)brace
id|output
op_add_assign
l_string|&quot;&lt;/string-array&gt;&bslash;n&lt;/resources&gt;&bslash;n&quot;
suffix:semicolon
id|System.out
dot
id|println
c_func
(paren
l_string|&quot;There are &quot;
op_plus
id|pages
dot
m_length
op_plus
l_string|&quot; element in pages.&quot;
)paren
suffix:semicolon
id|FileWriter
id|fwc
op_assign
r_new
id|FileWriter
c_func
(paren
id|outputFileBase
op_plus
l_string|&quot;Chapter&quot;
op_plus
id|stemp
op_plus
l_string|&quot;.txt&quot;
)paren
suffix:semicolon
id|fwc
dot
id|write
c_func
(paren
id|output
)paren
suffix:semicolon
id|fwc
dot
id|flush
c_func
(paren
)paren
suffix:semicolon
id|fwc
dot
id|close
c_func
(paren
)paren
suffix:semicolon
)brace
id|fwa
dot
id|write
c_func
(paren
l_string|&quot;&lt;/string-array&gt;&bslash;n&lt;/resources&gt;&bslash;n&quot;
)paren
suffix:semicolon
id|fwa
dot
id|flush
c_func
(paren
)paren
suffix:semicolon
id|fwa
dot
id|close
c_func
(paren
)paren
suffix:semicolon
)brace
)def_block
(def_block
r_void
id|fontSizeCmd
c_func
(paren
)paren
(brace
id|cmdPrefix
op_add_assign
l_string|&quot;&lt;s&gt;&quot;
suffix:semicolon
id|cmdPostfix
op_assign
l_string|&quot;&lt;/s&gt;&quot;
op_plus
id|cmdPostfix
suffix:semicolon
)brace
)def_block
(def_block
r_void
id|textNumCmd
c_func
(paren
)paren
(brace
id|cmdPrefix
op_add_assign
l_string|&quot;&lt;n&gt;&quot;
suffix:semicolon
id|cmdPostfix
op_assign
l_string|&quot;&lt;/n&gt;&quot;
op_plus
id|cmdPostfix
suffix:semicolon
id|disableShow
op_assign
l_bool|true
suffix:semicolon
)brace
)def_block
(def_block
r_void
id|textBoldCmd
c_func
(paren
)paren
(brace
id|cmdPrefix
op_add_assign
l_string|&quot;&lt;b&gt;&quot;
suffix:semicolon
id|cmdPostfix
op_assign
l_string|&quot;&lt;/b&gt;&quot;
op_plus
id|cmdPostfix
suffix:semicolon
)brace
)def_block
(def_block
r_void
id|unSetFontSizeCmd
c_func
(paren
)paren
(brace
r_if
c_cond
(paren
op_logical_neg
id|cmdPrefix
dot
id|endsWith
c_func
(paren
l_string|&quot;&lt;s&gt;&quot;
)paren
)paren
(brace
id|System.out
dot
id|println
c_func
(paren
l_string|&quot;Warring: There is a &lt;/s&gt; tag hasn&squot;t &lt;s&gt; tag exist.&quot;
)paren
suffix:semicolon
)brace
r_if
c_cond
(paren
id|cmdPrefix
dot
m_length
OG
l_int|3
)paren
(brace
id|cmdPrefix
op_assign
id|cmdPrefix
dot
id|substring
c_func
(paren
l_int|0
comma
id|cmdPrefix
dot
m_length
l_int|3
)paren
suffix:semicolon
)brace
r_else
(brace
id|cmdPrefix
op_assign
l_string|&quot;&quot;
suffix:semicolon
)brace
r_if
c_cond
(paren
id|cmdPostfix
dot
m_length
OG
l_int|4
)paren
(brace
id|cmdPostfix
op_assign
id|cmdPostfix
dot
id|substring
c_func
(paren
l_int|4
)paren
suffix:semicolon
)brace
r_else
(brace
id|cmdPostfix
op_assign
l_string|&quot;&quot;
suffix:semicolon
)brace
)brace
)def_block
(def_block
r_void
id|unSetTextNumCmd
c_func
(paren
)paren
(brace
r_if
c_cond
(paren
op_logical_neg
id|cmdPrefix
dot
id|endsWith
c_func
(paren
l_string|&quot;&lt;n&gt;&quot;
)paren
)paren
(brace
id|System.out
dot
id|println
c_func
(paren
l_string|&quot;Warring: There is a &lt;/n&gt; tag hasn&squot;t &lt;n&gt; tag exist.&quot;
)paren
suffix:semicolon
)brace
r_if
c_cond
(paren
id|cmdPrefix
dot
m_length
OG
l_int|3
)paren
(brace
id|cmdPrefix
op_assign
id|cmdPrefix
dot
id|substring
c_func
(paren
l_int|0
comma
id|cmdPrefix
dot
m_length
l_int|3
)paren
suffix:semicolon
)brace
r_else
(brace
id|cmdPrefix
op_assign
l_string|&quot;&quot;
suffix:semicolon
)brace
r_if
c_cond
(paren
id|cmdPostfix
dot
m_length
OG
l_int|4
)paren
(brace
id|cmdPostfix
op_assign
id|cmdPostfix
dot
id|substring
c_func
(paren
l_int|4
)paren
suffix:semicolon
)brace
r_else
(brace
id|cmdPostfix
op_assign
l_string|&quot;&quot;
suffix:semicolon
)brace
id|disableShow
op_assign
l_bool|false
suffix:semicolon
)brace
)def_block
(def_block
r_void
id|unSetTextBoldCmd
c_func
(paren
)paren
(brace
r_if
c_cond
(paren
op_logical_neg
id|cmdPrefix
dot
id|endsWith
c_func
(paren
l_string|&quot;&lt;b&gt;&quot;
)paren
)paren
(brace
id|System.out
dot
id|println
c_func
(paren
l_string|&quot;Warring: There is a &lt;/b&gt; tag hasn&squot;t &lt;b&gt; tag exist.&quot;
)paren
suffix:semicolon
)brace
r_if
c_cond
(paren
id|cmdPrefix
dot
m_length
OG
l_int|3
)paren
(brace
id|cmdPrefix
op_assign
id|cmdPrefix
dot
id|substring
c_func
(paren
l_int|0
comma
id|cmdPrefix
dot
m_length
l_int|3
)paren
suffix:semicolon
)brace
r_else
(brace
id|cmdPrefix
op_assign
l_string|&quot;&quot;
suffix:semicolon
)brace
r_if
c_cond
(paren
id|cmdPostfix
dot
m_length
OG
l_int|4
)paren
(brace
id|cmdPostfix
op_assign
id|cmdPostfix
dot
id|substring
c_func
(paren
l_int|4
)paren
suffix:semicolon
)brace
r_else
(brace
id|cmdPostfix
op_assign
l_string|&quot;&quot;
suffix:semicolon
)brace
)brace
)def_block
(def_block
r_void
id|checkBlock
c_func
(paren
id|File
id|f
comma
id|ArrayList&lt;String&gt;
id|pages
)paren
(brace
id|StringBuffer
id|sb
op_assign
r_new
id|StringBuffer
c_func
(paren
)paren
suffix:semicolon
id|BufferedReader
id|br
op_assign
r_new
id|BufferedReader
c_func
(paren
r_new
id|InputStreamReader
c_func
(paren
r_new
id|FileInputStream
c_func
(paren
id|f
)paren
)paren
)paren
suffix:semicolon
r_int
id|wordCount
op_assign
l_int|0
suffix:semicolon
r_int
id|level
op_assign
l_int|0
suffix:semicolon
r_char
id|c
op_assign
l_int|0
suffix:semicolon
r_boolean
id|tagStart
op_assign
l_bool|false
suffix:semicolon
id|String
id|stemp
op_assign
l_string|&quot;&quot;
suffix:semicolon
r_int
id|itemp
op_assign
l_int|1
suffix:semicolon
r_while
c_loop
(paren
(paren
id|itemp
op_assign
id|br
dot
id|read
c_func
(paren
)paren
)paren
op_ne
l_int|1
)paren
(brace
id|c
op_assign
(paren
r_char
)paren
id|itemp
suffix:semicolon
id|sb
dot
id|append
c_func
(paren
id|c
)paren
suffix:semicolon
r_if
c_cond
(paren
id|checkTag
c_func
(paren
id|c
comma
id|br
comma
id|sb
)paren
)paren
(brace
r_continue
suffix:semicolon
)brace
r_if
c_cond
(paren
id|disableShow
)paren
(brace
r_continue
suffix:semicolon
)brace
r_if
c_cond
(paren
op_logical_neg
id|wordFilter
c_func
(paren
id|c
)paren
)paren
(brace
r_continue
suffix:semicolon
)brace
r_if
c_cond
(paren
id|c
op_eq
l_char|&squot;&bslash;n&squot;
)paren
(brace
r_if
c_cond
(paren
id|wordCount
op_ne
l_int|0
)paren
(brace
id|lineCount
op_increment
suffix:semicolon
)brace
r_if
c_cond
(paren
id|checkPage
c_func
(paren
id|sb
comma
id|pages
)paren
)paren
(brace
id|sb
op_assign
r_new
id|StringBuffer
c_func
(paren
)paren
suffix:semicolon
)brace
id|br
dot
id|mark
c_func
(paren
l_int|512000
)paren
suffix:semicolon
id|stemp
op_assign
id|br
dot
id|readLine
c_func
(paren
)paren
suffix:semicolon
r_if
c_cond
(paren
id|stemp
op_ne
r_null
)paren
(brace
r_if
c_cond
(paren
id|stemp
dot
id|lastIndexOf
c_func
(paren
l_string|&quot;&lt;/s&gt;&lt;/b&gt;&quot;
)paren
op_eq
l_int|1
)paren
(brace
id|sb
dot
id|append
c_func
(paren
l_string|&quot;&#x3000;&#x3000;&quot;
)paren
suffix:semicolon
id|wordCount
op_assign
l_int|2
suffix:semicolon
)brace
r_else
(brace
id|wordCount
op_assign
l_int|0
suffix:semicolon
)brace
)brace
id|br
dot
id|reset
c_func
(paren
)paren
suffix:semicolon
)brace
r_else
r_if
c_cond
(paren
id|c
op_eq
l_char|&squot;.&squot;
)paren
(brace
r_continue
suffix:semicolon
)brace
r_else
(brace
id|wordCount
op_increment
suffix:semicolon
r_if
c_cond
(paren
id|wordCount
op_eq
l_int|35
)paren
(brace
id|br
dot
id|mark
c_func
(paren
l_int|10
)paren
suffix:semicolon
r_if
c_cond
(paren
(paren
id|itemp
op_assign
id|br
dot
id|read
c_func
(paren
)paren
)paren
op_eq
l_int|1
)paren
(brace
id|br
dot
id|reset
c_func
(paren
)paren
suffix:semicolon
r_continue
suffix:semicolon
)brace
id|br
dot
id|reset
c_func
(paren
)paren
suffix:semicolon
r_char
id|ctemp
op_assign
(paren
r_char
)paren
id|itemp
suffix:semicolon
r_if
c_cond
(paren
id|ctemp
op_eq
l_char|&squot;.&squot;
)paren
(brace
id|sb
dot
id|append
c_func
(paren
(paren
r_char
)paren
id|br
dot
id|read
c_func
(paren
)paren
)paren
suffix:semicolon
)brace
r_if
c_cond
(paren
id|ctemp
op_ne
l_char|&squot;&bslash;n&squot;
)paren
id|sb
dot
id|append
c_func
(paren
l_char|&squot;&bslash;n&squot;
)paren
suffix:semicolon
id|wordCount
op_assign
l_int|0
suffix:semicolon
id|lineCount
op_increment
suffix:semicolon
r_if
c_cond
(paren
id|checkPage
c_func
(paren
id|sb
comma
id|pages
)paren
)paren
id|sb
op_assign
r_new
id|StringBuffer
c_func
(paren
)paren
suffix:semicolon
)brace
)brace
)brace
id|prepareOutput
c_func
(paren
id|sb
comma
id|pages
)paren
suffix:semicolon
)brace
)def_block
(def_block
r_boolean
id|checkTag
c_func
(paren
r_char
id|c
comma
id|BufferedReader
id|br
comma
id|StringBuffer
id|sb
)paren
(brace
id|String
id|command
op_assign
l_string|&quot;&quot;
suffix:semicolon
r_if
c_cond
(paren
id|c
op_ne
l_char|&squot;&lt;&squot;
)paren
(brace
r_return
l_bool|false
suffix:semicolon
)brace
r_while
c_loop
(paren
(paren
id|c
op_assign
(paren
r_char
)paren
id|br
dot
id|read
c_func
(paren
)paren
)paren
op_ne
l_int|1
)paren
(brace
id|sb
dot
id|append
c_func
(paren
id|c
)paren
suffix:semicolon
r_if
c_cond
(paren
id|c
op_ne
l_char|&squot;&gt;&squot;
)paren
(brace
id|command
op_add_assign
id|c
suffix:semicolon
)brace
r_else
(brace
r_if
c_cond
(paren
id|command
dot
id|startsWith
c_func
(paren
l_string|&quot;/&quot;
)paren
)paren
(brace
r_if
c_cond
(paren
id|command
dot
id|startsWith
c_func
(paren
l_string|&quot;/n&quot;
)paren
)paren
(brace
id|unSetTextNumCmd
c_func
(paren
)paren
suffix:semicolon
id|command
op_assign
l_string|&quot;&quot;
suffix:semicolon
)brace
r_if
c_cond
(paren
id|command
dot
id|startsWith
c_func
(paren
l_string|&quot;/b&quot;
)paren
)paren
(brace
id|unSetTextBoldCmd
c_func
(paren
)paren
suffix:semicolon
id|command
op_assign
l_string|&quot;&quot;
suffix:semicolon
)brace
r_if
c_cond
(paren
id|command
dot
id|startsWith
c_func
(paren
l_string|&quot;/s&quot;
)paren
)paren
(brace
id|unSetFontSizeCmd
c_func
(paren
)paren
suffix:semicolon
id|command
op_assign
l_string|&quot;&quot;
suffix:semicolon
)brace
)brace
r_else
r_if
c_cond
(paren
id|command
dot
id|startsWith
c_func
(paren
l_string|&quot;n&quot;
)paren
)paren
(brace
id|textNumCmd
c_func
(paren
)paren
suffix:semicolon
id|command
op_assign
l_string|&quot;&quot;
suffix:semicolon
)brace
r_else
r_if
c_cond
(paren
id|command
dot
id|startsWith
c_func
(paren
l_string|&quot;s&quot;
)paren
)paren
(brace
id|fontSizeCmd
c_func
(paren
)paren
suffix:semicolon
id|command
op_assign
l_string|&quot;&quot;
suffix:semicolon
)brace
r_else
r_if
c_cond
(paren
id|command
dot
id|startsWith
c_func
(paren
l_string|&quot;b&quot;
)paren
)paren
(brace
id|textBoldCmd
c_func
(paren
)paren
suffix:semicolon
id|command
op_assign
l_string|&quot;&quot;
suffix:semicolon
)brace
r_break
suffix:semicolon
)brace
)brace
r_return
l_bool|true
suffix:semicolon
)brace
)def_block
(def_block
r_boolean
id|checkPage
c_func
(paren
id|StringBuffer
id|sb
comma
id|ArrayList&lt;String&gt;
id|pages
)paren
(brace
r_if
c_cond
(paren
id|lineCount
op_eq
l_int|13
)paren
(brace
id|lineCount
op_assign
l_int|0
suffix:semicolon
id|prepareOutput
c_func
(paren
id|sb
comma
id|pages
)paren
suffix:semicolon
r_return
l_bool|true
suffix:semicolon
)brace
r_return
l_bool|false
suffix:semicolon
)brace
)def_block
(def_block
r_boolean
id|wordFilter
c_func
(paren
r_char
id|w
)paren
(brace
r_char
id|sample
(braket
)braket
op_assign
initialization_block
suffix:semicolon
r_for
c_loop
(paren
r_char
id|c
suffix:colon
id|sample
)paren
(brace
r_if
c_cond
(paren
id|w
op_eq
id|c
)paren
(brace
r_return
l_bool|false
suffix:semicolon
)brace
)brace
r_return
l_bool|true
suffix:semicolon
)brace
)def_block
(def_block
r_void
id|prepareOutput
c_func
(paren
id|StringBuffer
id|sb
comma
id|ArrayList&lt;String&gt;
id|pages
)paren
(brace
id|BufferedReader
id|br
op_assign
r_new
id|BufferedReader
c_func
(paren
r_new
id|StringReader
c_func
(paren
id|sb
dot
m_toString
c_func
(paren
)paren
)paren
)paren
suffix:semicolon
id|StringBuffer
id|line
op_assign
r_new
id|StringBuffer
c_func
(paren
)paren
suffix:semicolon
id|String
id|stemp
op_assign
r_null
suffix:semicolon
r_int
(braket
)braket
(braket
)braket
id|ia
suffix:semicolon
r_int
id|itemp
op_assign
l_int|1
suffix:semicolon
r_char
id|c
op_assign
l_int|0
suffix:semicolon
r_int
id|lineCounter
op_assign
l_int|0
suffix:semicolon
id|String
id|pageContent
op_assign
l_string|&quot;&quot;
op_plus
id|lastPageTag
suffix:semicolon
id|lastPageTag
op_assign
l_string|&quot;&quot;
suffix:semicolon
r_while
c_loop
(paren
(paren
id|stemp
op_assign
id|br
dot
id|readLine
c_func
(paren
)paren
)paren
op_ne
r_null
)paren
(brace
id|pageContent
op_add_assign
id|getLineContent
c_func
(paren
id|stemp
)paren
suffix:semicolon
id|stemp
op_assign
id|stemp
dot
id|replaceAll
c_func
(paren
l_string|&quot;&lt;b&gt;&quot;
comma
l_string|&quot;&quot;
)paren
suffix:semicolon
id|stemp
op_assign
id|stemp
dot
id|replaceAll
c_func
(paren
l_string|&quot;&lt;/b&gt;&quot;
comma
l_string|&quot;&quot;
)paren
suffix:semicolon
id|stemp
op_assign
id|stemp
dot
id|replaceAll
c_func
(paren
l_string|&quot;&lt;s&gt;&quot;
comma
l_string|&quot;&quot;
)paren
suffix:semicolon
id|stemp
op_assign
id|stemp
dot
id|replaceAll
c_func
(paren
l_string|&quot;&lt;/s&gt;&quot;
comma
l_string|&quot;&quot;
)paren
suffix:semicolon
id|stemp
op_assign
id|stemp
dot
id|replaceAll
c_func
(paren
l_string|&quot;&lt;n&gt;&quot;
comma
l_string|&quot;&quot;
)paren
suffix:semicolon
id|stemp
op_assign
id|stemp
dot
id|replaceAll
c_func
(paren
l_string|&quot;&lt;/n&gt;&quot;
comma
l_string|&quot;&quot;
)paren
suffix:semicolon
)brace
r_if
c_cond
(paren
id|pageContent
dot
id|endsWith
c_func
(paren
l_string|&quot;&bslash;&bslash;n&bslash;n&quot;
)paren
)paren
(brace
id|pageContent
op_assign
id|pageContent
dot
id|substring
c_func
(paren
l_int|0
comma
id|pageContent
dot
m_length
l_int|3
)paren
suffix:semicolon
)brace
r_else
r_if
c_cond
(paren
id|pageContent
dot
id|endsWith
c_func
(paren
l_string|&quot;&bslash;&bslash;n&quot;
)paren
)paren
(brace
id|pageContent
op_assign
id|pageContent
dot
id|substring
c_func
(paren
l_int|0
comma
id|pageContent
dot
m_length
l_int|2
)paren
suffix:semicolon
)brace
id|stemp
op_assign
id|getPostfixTag
c_func
(paren
)paren
suffix:semicolon
id|System.out
dot
id|println
c_func
(paren
l_string|&quot;Last postfix tag: &quot;
op_plus
id|stemp
)paren
suffix:semicolon
r_if
c_cond
(paren
id|stemp
dot
m_length
OG
l_int|0
)paren
(brace
id|pageContent
op_add_assign
id|stemp
suffix:semicolon
id|lastPageTag
op_assign
id|getPrefixTag
c_func
(paren
)paren
suffix:semicolon
)brace
id|pages
dot
id|add
c_func
(paren
id|pageContent
)paren
suffix:semicolon
id|System.out
dot
id|println
c_func
(paren
l_string|&quot;Add to page content: (&quot;
op_plus
id|pages
dot
m_length
op_plus
l_string|&quot;), &quot;
op_plus
id|pageContent
)paren
suffix:semicolon
)brace
)def_block
(def_block
id|String
id|getLineContent
c_func
(paren
id|String
id|line
)paren
(brace
id|String
id|ret
op_assign
l_string|&quot;&quot;
suffix:semicolon
r_for
c_loop
(paren
r_int
id|i
op_assign
l_int|0
suffix:semicolon
id|i
OL
id|line
dot
m_length
suffix:semicolon
id|i
op_increment
)paren
(brace
r_char
id|c
op_assign
id|line
dot
m_charAt
c_func
(paren
id|i
)paren
suffix:semicolon
r_if
c_cond
(paren
id|wordFilter
c_func
(paren
id|c
)paren
)paren
(brace
id|ret
op_add_assign
id|c
suffix:semicolon
)brace
)brace
r_if
c_cond
(paren
id|debug
)paren
(brace
r_return
id|ret
op_plus
l_string|&quot;&bslash;&bslash;n&bslash;n&quot;
suffix:semicolon
)brace
r_else
(brace
r_return
id|ret
op_plus
l_string|&quot;&bslash;&bslash;n&quot;
suffix:semicolon
)brace
)brace
)def_block
)brace
)def_block
eof
(def_block
r_class
id|Config
(brace
(def_block
id|Config
c_func
(paren
)paren
(brace
id|this
c_func
(paren
l_bool|true
comma
l_bool|true
comma
l_bool|true
comma
l_bool|false
comma
l_int|1
comma
l_string|&quot;127.0.0.1&quot;
comma
l_int|10001
comma
l_string|&quot;COM1&quot;
comma
l_int|300
comma
l_int|0
comma
l_int|1
comma
l_int|0
comma
l_int|0
comma
l_int|3
comma
l_int|0
comma
l_bool|true
)paren
suffix:semicolon
)brace
)def_block
(def_block
id|Config
c_func
(paren
r_boolean
id|useMetric
comma
r_boolean
id|useXPort
comma
r_boolean
id|debugOutput
comma
r_boolean
id|useDefaultLanguage
comma
r_int
id|cbLanguagePosition
comma
id|String
id|ip
comma
r_int
id|port
comma
id|String
id|comPort
comma
r_int
id|baudRate
comma
r_int
id|cbComPortPosition
comma
r_int
id|cbBaudPosition
comma
r_int
id|parity
comma
r_int
id|stopBitPosition
comma
r_int
id|dataBitPosition
comma
r_int
id|flowControlPosition
comma
r_boolean
id|useSerial
)paren
(brace
id|useMetric
op_assign
id|useMetric
suffix:semicolon
id|useXPort
op_assign
id|useXPort
suffix:semicolon
id|debugOutput
op_assign
id|debugOutput
suffix:semicolon
id|useDefaultLanguage
op_assign
id|useDefaultLanguage
suffix:semicolon
id|cbLanguagePosition
op_assign
id|cbLanguagePosition
suffix:semicolon
id|setIp
c_func
(paren
id|ip
)paren
suffix:semicolon
id|port
op_assign
id|port
suffix:semicolon
id|comPort
op_assign
id|comPort
suffix:semicolon
id|baudRate
op_assign
id|baudRate
suffix:semicolon
id|cbComPortPosition
op_assign
id|cbComPortPosition
suffix:semicolon
id|cbBaudPosition
op_assign
id|cbBaudPosition
suffix:semicolon
id|parity
op_assign
id|parity
suffix:semicolon
id|setStopBit
c_func
(paren
id|stopBitPosition
)paren
suffix:semicolon
id|setDataBit
c_func
(paren
id|dataBitPosition
)paren
suffix:semicolon
id|flowControlPosition
op_assign
id|flowControlPosition
suffix:semicolon
id|useSerial
op_assign
id|useSerial
suffix:semicolon
)brace
)def_block
(def_block
id|String
m_toString
c_func
(paren
)paren
(brace
r_return
l_string|&quot;&bslash;nCurrent Config:&quot;+&quot;&bslash;n===============&quot;+&quot;&bslash;nSerial Port: &quot;
op_plus
id|comPort
op_plus
l_string|&quot;&bslash;nBaud Rate: &quot;
op_plus
id|baudRate
op_plus
l_string|&quot;&bslash;nParity: &quot;
op_plus
id|getParity
c_func
(paren
)paren
op_plus
l_string|&quot;&bslash;nStop Bits: &quot;
op_plus
id|getStopBit
c_func
(paren
)paren
op_plus
l_string|&quot;&bslash;nData Bits: &quot;
op_plus
id|getDataBits
c_func
(paren
)paren
op_plus
l_string|&quot;&bslash;nFlow Control: &quot;
op_plus
id|getFlowControlValue
c_func
(paren
)paren
op_plus
l_string|&quot;&bslash;nRemote host IP: &quot;
op_plus
id|ip
op_plus
l_string|&quot;&bslash;nPort: &quot;
op_plus
id|port
op_plus
l_string|&quot;&bslash;nUse xPort: &quot;
op_plus
id|useXPort
op_plus
l_string|&quot;&bslash;nUse System Default Language: &quot;
op_plus
id|getUseDefaultLanguage
c_func
(paren
)paren
op_plus
l_string|&quot;&bslash;nLanguage: &quot;
op_plus
id|Locale
dot
id|getDefault
c_func
(paren
)paren
suffix:semicolon
)brace
)def_block
(def_block
r_void
id|setIp
c_func
(paren
id|String
id|s
)paren
(brace
id|String
id|temp
suffix:semicolon
r_if
c_cond
(paren
id|ip
op_ne
r_null
)paren
(brace
id|temp
op_assign
id|getIp
c_func
(paren
)paren
suffix:semicolon
)brace
r_else
(brace
id|temp
op_assign
l_string|&quot;0.0.0.0&quot;
suffix:semicolon
)brace
id|String
(braket
)braket
id|splitS
op_assign
id|s
dot
id|split
c_func
(paren
l_string|&quot;&bslash;&bslash;.&quot;
)paren
suffix:semicolon
r_int
id|z
(braket
)braket
op_assign
r_new
r_int
(braket
l_int|4
)braket
suffix:semicolon
r_boolean
id|fehler
op_assign
l_bool|false
suffix:semicolon
r_if
c_cond
(paren
id|splitS
dot
m_length
OL
l_int|4
op_logical_or
id|splitS
dot
m_length
OG
l_int|4
)paren
(brace
id|fehler
op_assign
l_bool|true
suffix:semicolon
)brace
r_for
c_loop
(paren
r_int
id|i
op_assign
l_int|0
suffix:semicolon
id|i
OL
id|z
dot
m_length
suffix:semicolon
id|i
op_increment
)paren
(brace
r_try
(brace
id|z
(braket
id|i
)braket
op_assign
id|Integer
dot
id|parseInt
c_func
(paren
id|splitS
(braket
id|i
)braket
)paren
suffix:semicolon
r_if
c_cond
(paren
id|z
(braket
id|i
)braket
OL
l_int|0
op_logical_or
id|z
(braket
id|i
)braket
OG
l_int|255
)paren
(brace
id|fehler
op_assign
l_bool|true
suffix:semicolon
id|z
(braket
id|i
)braket
op_assign
l_int|0
suffix:semicolon
)brace
)brace
r_catch
(paren
id|Exception
id|e
)paren
(brace
id|fehler
op_assign
l_bool|true
suffix:semicolon
)brace
)brace
r_if
c_cond
(paren
op_logical_neg
id|fehler
)paren
(brace
id|ip
op_assign
id|s
suffix:semicolon
)brace
r_else
(brace
id|ip
op_assign
id|temp
suffix:semicolon
)brace
)brace
)def_block
(def_block
r_void
id|setStopBit
c_func
(paren
r_int
id|stopBitPosition
)paren
(brace
id|stopBitPosition
op_assign
id|stopBitPosition
suffix:semicolon
id|stopBit
op_assign
id|stopBitPosition
op_plus
l_int|1
suffix:semicolon
)brace
)def_block
(def_block
r_void
id|setDataBit
c_func
(paren
r_int
id|dataBitPosition
)paren
(brace
id|dataBitPosition
op_assign
id|dataBitPosition
suffix:semicolon
id|dataBits
op_assign
id|dataBitPosition
op_plus
l_int|5
suffix:semicolon
)brace
)def_block
(def_block
r_void
id|setFlowControl
c_func
(paren
r_int
id|flowControlPosition
)paren
(brace
id|flowControlPosition
op_assign
id|flowControlPosition
suffix:semicolon
r_switch
c_cond
(paren
id|flowControlPosition
)paren
(brace
r_case
l_int|0
suffix:colon
r_case
l_int|1
suffix:colon
r_case
l_int|2
suffix:colon
(brace
id|flowControlValue
op_assign
id|flowControlPosition
suffix:semicolon
)brace
r_case
l_int|3
suffix:colon
(brace
id|flowControlValue
op_assign
l_int|4
suffix:semicolon
)brace
r_case
l_int|4
suffix:colon
(brace
id|flowControlValue
op_assign
l_int|8
suffix:semicolon
)brace
)brace
)brace
)def_block
)brace
)def_block
eof
(def_block
r_class
id|test220e
(brace
(def_block
id|test220e
c_func
(paren
id|String
id|msg
)paren
(brace
id|super
c_func
(paren
id|msg
)paren
suffix:semicolon
)brace
)def_block
)brace
)def_block
eof
(def_block
r_class
id|ReportEarliestAncestor
(brace
(def_block
id|String
id|getName
c_func
(paren
)paren
(brace
r_return
l_string|&quot;Earliest Ancestor&quot;
suffix:semicolon
)brace
)def_block
(def_block
id|String
id|getInfo
c_func
(paren
)paren
(brace
r_return
l_string|&quot;This report prints the earliest ancestor of an individual&quot;
suffix:semicolon
)brace
)def_block
(def_block
id|Indi
id|findEarliest
c_func
(paren
id|Indi
id|indi
)paren
(brace
id|Indi
id|earliest
op_assign
id|indi
suffix:semicolon
id|PropertyDate
id|birth
suffix:semicolon
id|Fam
id|fam
op_assign
id|indi
dot
id|getFamc
c_func
(paren
)paren
suffix:semicolon
r_if
c_cond
(paren
id|fam
op_eq
r_null
)paren
(brace
r_return
id|earliest
suffix:semicolon
)brace
id|indi
op_assign
id|fam
dot
id|getHusband
c_func
(paren
)paren
suffix:semicolon
r_if
c_cond
(paren
id|indi
op_ne
r_null
)paren
(brace
id|indi
op_assign
id|findEarliest
c_func
(paren
id|indi
)paren
suffix:semicolon
id|birth
op_assign
id|indi
dot
id|getBirthDate
c_func
(paren
)paren
suffix:semicolon
r_if
c_cond
(paren
(paren
id|birth
op_ne
r_null
)paren
op_logical_and
(paren
id|birth
dot
m_compareTo
c_func
(paren
id|earliest
dot
id|getBirthDate
c_func
(paren
)paren
)paren
OL
l_int|0
)paren
)paren
(brace
id|earliest
op_assign
id|indi
suffix:semicolon
)brace
)brace
id|indi
op_assign
id|fam
dot
id|getWife
c_func
(paren
)paren
suffix:semicolon
r_if
c_cond
(paren
id|indi
op_ne
r_null
)paren
(brace
id|indi
op_assign
id|findEarliest
c_func
(paren
id|indi
)paren
suffix:semicolon
id|birth
op_assign
id|indi
dot
id|getBirthDate
c_func
(paren
)paren
suffix:semicolon
r_if
c_cond
(paren
(paren
id|birth
op_ne
r_null
)paren
op_logical_and
(paren
id|birth
dot
m_compareTo
c_func
(paren
id|earliest
dot
id|getBirthDate
c_func
(paren
)paren
)paren
OL
l_int|0
)paren
)paren
(brace
id|earliest
op_assign
id|indi
suffix:semicolon
)brace
)brace
r_return
id|earliest
suffix:semicolon
)brace
)def_block
(def_block
r_boolean
id|usesStandardOut
c_func
(paren
)paren
(brace
r_return
l_bool|true
suffix:semicolon
)brace
)def_block
(def_block
id|String
id|getAuthor
c_func
(paren
)paren
(brace
r_return
l_string|&quot;Sven Meier &lt;sven@meiers.net&gt;&quot;
suffix:semicolon
)brace
)def_block
(def_block
r_boolean
id|isReadOnly
c_func
(paren
)paren
(brace
r_return
l_bool|true
suffix:semicolon
)brace
)def_block
(def_block
r_boolean
id|start
c_func
(paren
id|ReportBridge
id|bridge
comma
id|Gedcom
id|gedcom
)paren
(brace
id|String
id|id
op_assign
id|bridge
dot
id|getValueFromUser
c_func
(paren
l_string|&quot;Please enter id number (eg: 1)&quot;
comma
r_new
id|String
(braket
l_int|0
)braket
comma
l_string|&quot;id&quot;
)paren
suffix:semicolon
r_if
c_cond
(paren
(paren
id|id
op_eq
r_null
)paren
op_logical_or
(paren
id|id
dot
m_length
op_eq
l_int|0
)paren
)paren
(brace
id|bridge
dot
id|println
c_func
(paren
l_string|&quot;Expected parameter id - Aborting ...&quot;
)paren
suffix:semicolon
r_return
l_bool|false
suffix:semicolon
)brace
id|id
op_assign
l_string|&quot;I&quot;
op_plus
id|id
suffix:semicolon
id|EntityList
id|indis
op_assign
id|gedcom
dot
id|getEntities
c_func
(paren
id|Gedcom.INDIVIDUALS
)paren
suffix:semicolon
id|Indi
id|indi
suffix:semicolon
r_try
(brace
id|indi
op_assign
id|gedcom
dot
id|getIndiFromId
c_func
(paren
id|id
)paren
suffix:semicolon
)brace
r_catch
(paren
id|DuplicateIDException
id|e
)paren
(brace
id|bridge
dot
id|println
c_func
(paren
l_string|&quot;There are more than one individuals with that ID&quot;
)paren
suffix:semicolon
r_return
l_bool|false
suffix:semicolon
)brace
r_if
c_cond
(paren
id|indi
op_eq
r_null
)paren
(brace
id|bridge
dot
id|println
c_func
(paren
l_string|&quot;Cannot find this individual.&quot;
)paren
suffix:semicolon
)brace
r_else
(brace
id|bridge
dot
id|println
c_func
(paren
l_string|&quot;You&squot;ve asked for ID &squot;&quot;
op_plus
id|id
op_plus
l_string|&quot;&squot;.&quot;
)paren
suffix:semicolon
id|bridge
dot
id|println
c_func
(paren
l_string|&quot;The Individual &squot;&quot;
op_plus
id|id
op_plus
l_string|&quot;&squot; is : &quot;
op_plus
id|indi
dot
id|getName
c_func
(paren
)paren
)paren
suffix:semicolon
id|bridge
dot
id|println
c_func
(paren
l_string|&quot;                            &quot;
)paren
suffix:semicolon
id|bridge
dot
id|println
c_func
(paren
l_string|&quot;     Earliest ancestor of &quot;
op_plus
id|indi
dot
id|getName
c_func
(paren
)paren
op_plus
l_string|&quot; is:&quot;
)paren
suffix:semicolon
id|bridge
dot
id|println
c_func
(paren
l_string|&quot;     =---&gt;     &quot;
op_plus
id|findEarliest
c_func
(paren
id|indi
)paren
dot
id|getName
c_func
(paren
)paren
)paren
suffix:semicolon
id|bridge
dot
id|println
c_func
(paren
l_string|&quot;                            &quot;
)paren
suffix:semicolon
)brace
r_return
l_bool|true
suffix:semicolon
)brace
)def_block
)brace
)def_block
eof
(def_block
r_class
id|ThrowsTagInfo
(brace
(def_block
id|ThrowsTagInfo
c_func
(paren
id|String
id|name
comma
id|String
id|kind
comma
id|String
id|text
comma
id|ContainerInfo
id|base
comma
id|SourcePositionInfo
id|sp
)paren
(brace
id|super
c_func
(paren
id|name
comma
id|kind
comma
id|text
comma
id|base
comma
id|sp
)paren
suffix:semicolon
id|Matcher
id|m
op_assign
id|PATTERN
dot
id|matcher
c_func
(paren
id|text
)paren
suffix:semicolon
r_if
c_cond
(paren
id|m
dot
id|matches
c_func
(paren
)paren
)paren
(brace
id|setCommentText
c_func
(paren
id|m
dot
id|group
c_func
(paren
l_int|2
)paren
)paren
suffix:semicolon
id|String
id|className
op_assign
id|m
dot
id|group
c_func
(paren
l_int|1
)paren
suffix:semicolon
r_if
c_cond
(paren
id|base
r_instanceof
id|ClassInfo
)paren
(brace
id|mException
op_assign
(paren
(paren
id|ClassInfo
)paren
id|base
)paren
dot
id|findClass
c_func
(paren
id|className
)paren
suffix:semicolon
)brace
r_if
c_cond
(paren
id|mException
op_eq
r_null
)paren
(brace
id|mException
op_assign
id|Converter
dot
id|obtainClass
c_func
(paren
id|className
)paren
suffix:semicolon
)brace
)brace
)brace
)def_block
(def_block
id|ThrowsTagInfo
c_func
(paren
id|String
id|name
comma
id|String
id|kind
comma
id|String
id|text
comma
id|ClassInfo
id|exception
comma
id|String
id|exceptionComment
comma
id|ContainerInfo
id|base
comma
id|SourcePositionInfo
id|sp
)paren
(brace
id|super
c_func
(paren
id|name
comma
id|kind
comma
id|text
comma
id|base
comma
id|sp
)paren
suffix:semicolon
id|mException
op_assign
id|exception
suffix:semicolon
id|setCommentText
c_func
(paren
id|exceptionComment
)paren
suffix:semicolon
)brace
)def_block
(def_block
id|TypeInfo
id|exceptionType
c_func
(paren
)paren
(brace
r_if
c_cond
(paren
id|mException
op_ne
r_null
)paren
(brace
r_return
id|mException
dot
id|asTypeInfo
c_func
(paren
)paren
suffix:semicolon
)brace
r_else
(brace
r_return
r_null
suffix:semicolon
)brace
)brace
)def_block
(def_block
r_void
id|makeHDF
c_func
(paren
id|HDF
id|data
comma
id|String
id|base
comma
id|ThrowsTagInfo
(braket
)braket
id|tags
)paren
(brace
r_for
c_loop
(paren
r_int
id|i
op_assign
l_int|0
suffix:semicolon
id|i
OL
id|tags
dot
m_length
suffix:semicolon
id|i
op_increment
)paren
(brace
id|TagInfo
dot
id|makeHDF
c_func
(paren
id|data
comma
id|base
op_plus
l_char|&squot;.&squot;
op_plus
id|i
op_plus
l_string|&quot;.comment&quot;
comma
id|tags
(braket
id|i
)braket
dot
id|commentTags
c_func
(paren
)paren
)paren
suffix:semicolon
r_if
c_cond
(paren
id|tags
(braket
id|i
)braket
dot
id|exceptionType
c_func
(paren
)paren
op_ne
r_null
)paren
(brace
id|tags
(braket
id|i
)braket
dot
id|exceptionType
c_func
(paren
)paren
dot
id|makeHDF
c_func
(paren
id|data
comma
id|base
op_plus
l_string|&quot;.&quot;
op_plus
id|i
op_plus
l_string|&quot;.type&quot;
)paren
suffix:semicolon
)brace
)brace
)brace
)def_block
)brace
)def_block
eof
(def_block
r_class
id|Roundtrip
(brace
(def_block
id|Roundtrip
c_func
(paren
id|XmlPullParser
id|parser
comma
id|XmlSerializer
id|serializer
)paren
(brace
id|parser
op_assign
id|parser
suffix:semicolon
id|serializer
op_assign
id|serializer
suffix:semicolon
)brace
)def_block
(def_block
r_void
id|writeStartTag
c_func
(paren
)paren
(brace
r_if
c_cond
(paren
op_logical_neg
id|parser
dot
id|getFeature
c_func
(paren
id|parser.FEATURE_REPORT_NAMESPACE_ATTRIBUTES
)paren
)paren
(brace
r_for
c_loop
(paren
r_int
id|i
op_assign
id|parser
dot
id|getNamespaceCount
c_func
(paren
id|parser
dot
id|getDepth
c_func
(paren
)paren
op_minus
l_int|1
)paren
suffix:semicolon
id|i
OL
id|parser
dot
id|getNamespaceCount
c_func
(paren
id|parser
dot
id|getDepth
c_func
(paren
)paren
)paren
op_minus
l_int|1
suffix:semicolon
id|i
op_increment
)paren
(brace
id|serializer
dot
id|setPrefix
c_func
(paren
id|parser
dot
id|getNamespacePrefix
c_func
(paren
id|i
)paren
comma
id|parser
dot
id|getNamespaceUri
c_func
(paren
id|i
)paren
)paren
suffix:semicolon
)brace
)brace
id|serializer
dot
id|startTag
c_func
(paren
id|parser
dot
id|getNamespace
c_func
(paren
)paren
comma
id|parser
dot
id|getName
c_func
(paren
)paren
)paren
suffix:semicolon
r_for
c_loop
(paren
r_int
id|i
op_assign
l_int|0
suffix:semicolon
id|i
OL
id|parser
dot
id|getAttributeCount
c_func
(paren
)paren
suffix:semicolon
id|i
op_increment
)paren
(brace
id|serializer
dot
id|attribute
c_func
(paren
id|parser
dot
id|getAttributeNamespace
c_func
(paren
id|i
)paren
comma
id|parser
dot
id|getAttributeName
c_func
(paren
id|i
)paren
comma
id|parser
dot
id|getAttributeValue
c_func
(paren
id|i
)paren
)paren
suffix:semicolon
)brace
)brace
)def_block
(def_block
r_void
id|writeToken
c_func
(paren
)paren
(brace
r_switch
c_cond
(paren
id|parser
dot
id|getEventType
c_func
(paren
)paren
)paren
(brace
r_case
id|XmlPullParser.START_DOCUMENT
suffix:colon
(brace
)brace
r_case
id|XmlPullParser.END_DOCUMENT
suffix:colon
(brace
id|serializer
dot
id|endDocument
c_func
(paren
)paren
suffix:semicolon
)brace
r_case
id|XmlPullParser.START_TAG
suffix:colon
(brace
id|writeStartTag
c_func
(paren
)paren
suffix:semicolon
)brace
r_case
id|XmlPullParser.END_TAG
suffix:colon
(brace
id|serializer
dot
id|endTag
c_func
(paren
id|parser
dot
id|getNamespace
c_func
(paren
)paren
comma
id|parser
dot
id|getName
c_func
(paren
)paren
)paren
suffix:semicolon
)brace
r_case
id|XmlPullParser.IGNORABLE_WHITESPACE
suffix:colon
(brace
id|serializer
dot
id|ignorableWhitespace
c_func
(paren
id|parser
dot
id|getText
c_func
(paren
)paren
)paren
suffix:semicolon
)brace
r_case
id|XmlPullParser.TEXT
suffix:colon
(brace
id|serializer
dot
id|text
c_func
(paren
id|parser
dot
id|getText
c_func
(paren
)paren
)paren
suffix:semicolon
)brace
r_case
id|XmlPullParser.ENTITY_REF
suffix:colon
(brace
id|serializer
dot
id|entityRef
c_func
(paren
id|parser
dot
id|getName
c_func
(paren
)paren
)paren
suffix:semicolon
)brace
r_case
id|XmlPullParser.CDSECT
suffix:colon
(brace
id|serializer
dot
id|cdsect
c_func
(paren
id|parser
dot
id|getText
c_func
(paren
)paren
)paren
suffix:semicolon
)brace
r_case
id|XmlPullParser.PROCESSING_INSTRUCTION
suffix:colon
(brace
id|serializer
dot
id|processingInstruction
c_func
(paren
id|parser
dot
id|getText
c_func
(paren
)paren
)paren
suffix:semicolon
)brace
r_case
id|XmlPullParser.COMMENT
suffix:colon
(brace
id|serializer
dot
id|comment
c_func
(paren
id|parser
dot
id|getText
c_func
(paren
)paren
)paren
suffix:semicolon
)brace
r_case
id|XmlPullParser.DOCDECL
suffix:colon
(brace
id|serializer
dot
id|docdecl
c_func
(paren
id|parser
dot
id|getText
c_func
(paren
)paren
)paren
suffix:semicolon
)brace
r_default
suffix:colon
(brace
r_throw
r_new
id|RuntimeException
c_func
(paren
l_string|&quot;unrecognized event: &quot;
op_plus
id|parser
dot
id|getEventType
c_func
(paren
)paren
)paren
suffix:semicolon
)brace
)brace
)brace
)def_block
(def_block
r_void
id|roundTrip
c_func
(paren
)paren
(brace
r_while
c_loop
(paren
id|parser
dot
id|getEventType
c_func
(paren
)paren
op_ne
id|parser.END_DOCUMENT
)paren
(brace
id|writeToken
c_func
(paren
)paren
suffix:semicolon
id|parser
dot
id|nextToken
c_func
(paren
)paren
suffix:semicolon
)brace
id|writeToken
c_func
(paren
)paren
suffix:semicolon
)brace
)def_block
(def_block
r_void
id|main
c_func
(paren
id|String
(braket
)braket
id|args
)paren
(brace
r_if
c_cond
(paren
id|args
dot
m_length
op_eq
l_int|0
)paren
(brace
r_throw
r_new
id|RuntimeException
c_func
(paren
l_string|&quot;input xml file name expected&quot;
)paren
suffix:semicolon
)brace
r_for
c_loop
(paren
r_int
id|i
op_assign
l_int|0
suffix:semicolon
id|i
OL
id|args
dot
m_length
suffix:semicolon
id|i
op_increment
)paren
(brace
id|System.out
dot
id|println
c_func
(paren
l_string|&quot;processing: &quot;
op_plus
id|args
(braket
id|i
)braket
)paren
suffix:semicolon
id|XmlPullParser
id|pp
op_assign
r_new
id|KXmlParser
c_func
(paren
)paren
suffix:semicolon
id|pp
dot
id|setFeature
c_func
(paren
id|XmlPullParser.FEATURE_PROCESS_NAMESPACES
comma
l_bool|true
)paren
suffix:semicolon
id|XmlSerializer
id|serializer
op_assign
r_new
id|KXmlSerializer
c_func
(paren
)paren
suffix:semicolon
id|pp
dot
id|setInput
c_func
(paren
r_new
id|FileReader
c_func
(paren
id|args
(braket
id|i
)braket
)paren
)paren
suffix:semicolon
id|serializer
dot
id|setOutput
c_func
(paren
id|System.out
comma
r_null
)paren
suffix:semicolon
(paren
r_new
id|Roundtrip
c_func
(paren
id|pp
comma
id|serializer
)paren
)paren
dot
id|roundTrip
c_func
(paren
)paren
suffix:semicolon
id|serializer
dot
id|flush
c_func
(paren
)paren
suffix:semicolon
)brace
)brace
)def_block
)brace
)def_block
eof
r_class
id|TryCatchLexer
(brace
(def_block
id|TryCatchLexer
c_func
(paren
)paren
(brace
suffix:semicolon
)brace
)def_block
(def_block
id|TryCatchLexer
c_func
(paren
id|CharStream
id|input
)paren
(brace
id|this
c_func
(paren
id|input
comma
r_new
id|RecognizerSharedState
c_func
(paren
)paren
)paren
suffix:semicolon
)brace
)def_block
(def_block
id|TryCatchLexer
c_func
(paren
id|CharStream
id|input
comma
id|RecognizerSharedState
id|state
)paren
(brace
id|super
c_func
(paren
id|input
comma
id|state
)paren
suffix:semicolon
)brace
)def_block
(def_block
id|String
id|getGrammarFileName
c_func
(paren
)paren
(brace
r_return
l_string|&quot;/media/dev/desarrollo/@ws-antlrv3ide/org.deved.antlride.core/grammar&squot;s/try-catch/TryCatch.g&quot;
suffix:semicolon
)brace
)def_block
(def_block
r_void
id|mT__7
c_func
(paren
)paren
(brace
r_try
(brace
r_int
id|_type
op_assign
id|T__7
suffix:semicolon
r_int
id|_channel
op_assign
id|DEFAULT_TOKEN_CHANNEL
suffix:semicolon
(brace
id|match
c_func
(paren
l_string|&quot;method&quot;
)paren
suffix:semicolon
)brace
id|state.type
op_assign
id|_type
suffix:semicolon
id|state.channel
op_assign
id|_channel
suffix:semicolon
)brace
r_finally
(brace
)brace
)brace
)def_block
(def_block
r_void
id|mT__8
c_func
(paren
)paren
(brace
r_try
(brace
r_int
id|_type
op_assign
id|T__8
suffix:semicolon
r_int
id|_channel
op_assign
id|DEFAULT_TOKEN_CHANNEL
suffix:semicolon
(brace
id|match
c_func
(paren
l_char|&squot;(&squot;
)paren
suffix:semicolon
)brace
id|state.type
op_assign
id|_type
suffix:semicolon
id|state.channel
op_assign
id|_channel
suffix:semicolon
)brace
r_finally
(brace
)brace
)brace
)def_block
(def_block
r_void
id|mT__9
c_func
(paren
)paren
(brace
r_try
(brace
r_int
id|_type
op_assign
id|T__9
suffix:semicolon
r_int
id|_channel
op_assign
id|DEFAULT_TOKEN_CHANNEL
suffix:semicolon
(brace
id|match
c_func
(paren
l_char|&squot;)&squot;
)paren
suffix:semicolon
)brace
id|state.type
op_assign
id|_type
suffix:semicolon
id|state.channel
op_assign
id|_channel
suffix:semicolon
)brace
r_finally
(brace
)brace
)brace
)def_block
(def_block
r_void
id|mT__10
c_func
(paren
)paren
(brace
r_try
(brace
r_int
id|_type
op_assign
id|T__10
suffix:semicolon
r_int
id|_channel
op_assign
id|DEFAULT_TOKEN_CHANNEL
suffix:semicolon
(brace
id|match
c_func
(paren
l_char|&squot;{&squot;
)paren
suffix:semicolon
)brace
id|state.type
op_assign
id|_type
suffix:semicolon
id|state.channel
op_assign
id|_channel
suffix:semicolon
)brace
r_finally
(brace
)brace
)brace
)def_block
(def_block
r_void
id|mT__11
c_func
(paren
)paren
(brace
r_try
(brace
r_int
id|_type
op_assign
id|T__11
suffix:semicolon
r_int
id|_channel
op_assign
id|DEFAULT_TOKEN_CHANNEL
suffix:semicolon
(brace
id|match
c_func
(paren
l_char|&squot;}&squot;
)paren
suffix:semicolon
)brace
id|state.type
op_assign
id|_type
suffix:semicolon
id|state.channel
op_assign
id|_channel
suffix:semicolon
)brace
r_finally
(brace
)brace
)brace
)def_block
(def_block
r_void
id|mT__12
c_func
(paren
)paren
(brace
r_try
(brace
r_int
id|_type
op_assign
id|T__12
suffix:semicolon
r_int
id|_channel
op_assign
id|DEFAULT_TOKEN_CHANNEL
suffix:semicolon
(brace
id|match
c_func
(paren
l_char|&squot;=&squot;
)paren
suffix:semicolon
)brace
id|state.type
op_assign
id|_type
suffix:semicolon
id|state.channel
op_assign
id|_channel
suffix:semicolon
)brace
r_finally
(brace
)brace
)brace
)def_block
(def_block
r_void
id|mT__13
c_func
(paren
)paren
(brace
r_try
(brace
r_int
id|_type
op_assign
id|T__13
suffix:semicolon
r_int
id|_channel
op_assign
id|DEFAULT_TOKEN_CHANNEL
suffix:semicolon
(brace
id|match
c_func
(paren
l_char|&squot;;&squot;
)paren
suffix:semicolon
)brace
id|state.type
op_assign
id|_type
suffix:semicolon
id|state.channel
op_assign
id|_channel
suffix:semicolon
)brace
r_finally
(brace
)brace
)brace
)def_block
(def_block
r_void
id|mT__14
c_func
(paren
)paren
(brace
r_try
(brace
r_int
id|_type
op_assign
id|T__14
suffix:semicolon
r_int
id|_channel
op_assign
id|DEFAULT_TOKEN_CHANNEL
suffix:semicolon
(brace
id|match
c_func
(paren
l_char|&squot;+&squot;
)paren
suffix:semicolon
)brace
id|state.type
op_assign
id|_type
suffix:semicolon
id|state.channel
op_assign
id|_channel
suffix:semicolon
)brace
r_finally
(brace
)brace
)brace
)def_block
(def_block
r_void
id|mT__15
c_func
(paren
)paren
(brace
r_try
(brace
r_int
id|_type
op_assign
id|T__15
suffix:semicolon
r_int
id|_channel
op_assign
id|DEFAULT_TOKEN_CHANNEL
suffix:semicolon
(brace
id|match
c_func
(paren
l_char|&squot;*&squot;
)paren
suffix:semicolon
)brace
id|state.type
op_assign
id|_type
suffix:semicolon
id|state.channel
op_assign
id|_channel
suffix:semicolon
)brace
r_finally
(brace
)brace
)brace
)def_block
(def_block
r_void
id|mID
c_func
(paren
)paren
(brace
r_try
(brace
r_int
id|_type
op_assign
id|ID
suffix:semicolon
r_int
id|_channel
op_assign
id|DEFAULT_TOKEN_CHANNEL
suffix:semicolon
(brace
r_int
id|cnt1
op_assign
l_int|0
suffix:semicolon
id|loop1
suffix:colon
r_do
(brace
r_int
id|alt1
op_assign
l_int|2
suffix:semicolon
r_int
id|LA1_0
op_assign
id|input
dot
id|LA
c_func
(paren
l_int|1
)paren
suffix:semicolon
r_if
c_cond
(paren
(paren
(paren
id|LA1_0
op_ge
l_char|&squot;A&squot;
op_logical_and
id|LA1_0
op_le
l_char|&squot;Z&squot;
)paren
op_logical_or
(paren
id|LA1_0
op_ge
l_char|&squot;a&squot;
op_logical_and
id|LA1_0
op_le
l_char|&squot;z&squot;
)paren
)paren
)paren
(brace
id|alt1
op_assign
l_int|1
suffix:semicolon
)brace
r_switch
c_cond
(paren
id|alt1
)paren
(brace
r_case
l_int|1
suffix:colon
(brace
r_if
c_cond
(paren
(paren
id|input
dot
id|LA
c_func
(paren
l_int|1
)paren
op_ge
l_char|&squot;A&squot;
op_logical_and
id|input
dot
id|LA
c_func
(paren
l_int|1
)paren
op_le
l_char|&squot;Z&squot;
)paren
op_logical_or
(paren
id|input
dot
id|LA
c_func
(paren
l_int|1
)paren
op_ge
l_char|&squot;a&squot;
op_logical_and
id|input
dot
id|LA
c_func
(paren
l_int|1
)paren
op_le
l_char|&squot;z&squot;
)paren
)paren
(brace
id|input
dot
id|consume
c_func
(paren
)paren
suffix:semicolon
)brace
r_else
(brace
id|MismatchedSetException
id|mse
op_assign
r_new
id|MismatchedSetException
c_func
(paren
r_null
comma
id|input
)paren
suffix:semicolon
id|recover
c_func
(paren
id|mse
)paren
suffix:semicolon
r_throw
id|mse
suffix:semicolon
)brace
)brace
r_default
suffix:colon
(brace
r_if
c_cond
(paren
id|cnt1
op_ge
l_int|1
)paren
(brace
r_break
id|loop1
suffix:semicolon
)brace
id|EarlyExitException
id|eee
op_assign
r_new
id|EarlyExitException
c_func
(paren
l_int|1
comma
id|input
)paren
suffix:semicolon
r_throw
id|eee
suffix:semicolon
)brace
)brace
id|cnt1
op_increment
suffix:semicolon
)brace
r_while
c_loop
(paren
l_bool|true
)paren
suffix:semicolon
)brace
id|state.type
op_assign
id|_type
suffix:semicolon
id|state.channel
op_assign
id|_channel
suffix:semicolon
)brace
r_finally
(brace
)brace
)brace
)def_block
(def_block
r_void
id|mINT
c_func
(paren
)paren
(brace
r_try
(brace
r_int
id|_type
op_assign
id|INT
suffix:semicolon
r_int
id|_channel
op_assign
id|DEFAULT_TOKEN_CHANNEL
suffix:semicolon
(brace
r_int
id|cnt2
op_assign
l_int|0
suffix:semicolon
id|loop2
suffix:colon
r_do
(brace
r_int
id|alt2
op_assign
l_int|2
suffix:semicolon
r_int
id|LA2_0
op_assign
id|input
dot
id|LA
c_func
(paren
l_int|1
)paren
suffix:semicolon
r_if
c_cond
(paren
(paren
(paren
id|LA2_0
op_ge
l_char|&squot;0&squot;
op_logical_and
id|LA2_0
op_le
l_char|&squot;9&squot;
)paren
)paren
)paren
(brace
id|alt2
op_assign
l_int|1
suffix:semicolon
)brace
r_switch
c_cond
(paren
id|alt2
)paren
(brace
r_case
l_int|1
suffix:colon
(brace
id|matchRange
c_func
(paren
l_char|&squot;0&squot;
comma
l_char|&squot;9&squot;
)paren
suffix:semicolon
)brace
r_default
suffix:colon
(brace
r_if
c_cond
(paren
id|cnt2
op_ge
l_int|1
)paren
(brace
r_break
id|loop2
suffix:semicolon
)brace
id|EarlyExitException
id|eee
op_assign
r_new
id|EarlyExitException
c_func
(paren
l_int|2
comma
id|input
)paren
suffix:semicolon
r_throw
id|eee
suffix:semicolon
)brace
)brace
id|cnt2
op_increment
suffix:semicolon
)brace
r_while
c_loop
(paren
l_bool|true
)paren
suffix:semicolon
)brace
id|state.type
op_assign
id|_type
suffix:semicolon
id|state.channel
op_assign
id|_channel
suffix:semicolon
)brace
r_finally
(brace
)brace
)brace
)def_block
(def_block
r_void
id|mWS
c_func
(paren
)paren
(brace
r_try
(brace
r_int
id|_type
op_assign
id|WS
suffix:semicolon
r_int
id|_channel
op_assign
id|DEFAULT_TOKEN_CHANNEL
suffix:semicolon
(brace
r_int
id|cnt3
op_assign
l_int|0
suffix:semicolon
id|loop3
suffix:colon
r_do
(brace
r_int
id|alt3
op_assign
l_int|2
suffix:semicolon
r_int
id|LA3_0
op_assign
id|input
dot
id|LA
c_func
(paren
l_int|1
)paren
suffix:semicolon
r_if
c_cond
(paren
(paren
(paren
id|LA3_0
op_ge
l_char|&squot;&bslash;t&squot;
op_logical_and
id|LA3_0
op_le
l_char|&squot;&bslash;n&squot;
)paren
op_logical_or
id|LA3_0
op_eq
l_char|&squot; &squot;
)paren
)paren
(brace
id|alt3
op_assign
l_int|1
suffix:semicolon
)brace
r_switch
c_cond
(paren
id|alt3
)paren
(brace
r_case
l_int|1
suffix:colon
(brace
r_if
c_cond
(paren
(paren
id|input
dot
id|LA
c_func
(paren
l_int|1
)paren
op_ge
l_char|&squot;&bslash;t&squot;
op_logical_and
id|input
dot
id|LA
c_func
(paren
l_int|1
)paren
op_le
l_char|&squot;&bslash;n&squot;
)paren
op_logical_or
id|input
dot
id|LA
c_func
(paren
l_int|1
)paren
op_eq
l_char|&squot; &squot;
)paren
(brace
id|input
dot
id|consume
c_func
(paren
)paren
suffix:semicolon
)brace
r_else
(brace
id|MismatchedSetException
id|mse
op_assign
r_new
id|MismatchedSetException
c_func
(paren
r_null
comma
id|input
)paren
suffix:semicolon
id|recover
c_func
(paren
id|mse
)paren
suffix:semicolon
r_throw
id|mse
suffix:semicolon
)brace
)brace
r_default
suffix:colon
(brace
r_if
c_cond
(paren
id|cnt3
op_ge
l_int|1
)paren
(brace
r_break
id|loop3
suffix:semicolon
)brace
id|EarlyExitException
id|eee
op_assign
r_new
id|EarlyExitException
c_func
(paren
l_int|3
comma
id|input
)paren
suffix:semicolon
r_throw
id|eee
suffix:semicolon
)brace
)brace
id|cnt3
op_increment
suffix:semicolon
)brace
r_while
c_loop
(paren
l_bool|true
)paren
suffix:semicolon
id|_channel
op_assign
id|HIDDEN
suffix:semicolon
)brace
id|state.type
op_assign
id|_type
suffix:semicolon
id|state.channel
op_assign
id|_channel
suffix:semicolon
)brace
r_finally
(brace
)brace
)brace
)def_block
(def_block
r_void
id|mTokens
c_func
(paren
)paren
(brace
r_int
id|alt4
op_assign
l_int|12
suffix:semicolon
id|alt4
op_assign
id|dfa4
dot
id|predict
c_func
(paren
id|input
)paren
suffix:semicolon
r_switch
c_cond
(paren
id|alt4
)paren
(brace
r_case
l_int|1
suffix:colon
(brace
id|mT__7
c_func
(paren
)paren
suffix:semicolon
)brace
r_case
l_int|2
suffix:colon
(brace
id|mT__8
c_func
(paren
)paren
suffix:semicolon
)brace
r_case
l_int|3
suffix:colon
(brace
id|mT__9
c_func
(paren
)paren
suffix:semicolon
)brace
r_case
l_int|4
suffix:colon
(brace
id|mT__10
c_func
(paren
)paren
suffix:semicolon
)brace
r_case
l_int|5
suffix:colon
(brace
id|mT__11
c_func
(paren
)paren
suffix:semicolon
)brace
r_case
l_int|6
suffix:colon
(brace
id|mT__12
c_func
(paren
)paren
suffix:semicolon
)brace
r_case
l_int|7
suffix:colon
(brace
id|mT__13
c_func
(paren
)paren
suffix:semicolon
)brace
r_case
l_int|8
suffix:colon
(brace
id|mT__14
c_func
(paren
)paren
suffix:semicolon
)brace
r_case
l_int|9
suffix:colon
(brace
id|mT__15
c_func
(paren
)paren
suffix:semicolon
)brace
r_case
l_int|10
suffix:colon
(brace
id|mID
c_func
(paren
)paren
suffix:semicolon
)brace
r_case
l_int|11
suffix:colon
(brace
id|mINT
c_func
(paren
)paren
suffix:semicolon
)brace
r_case
l_int|12
suffix:colon
(brace
id|mWS
c_func
(paren
)paren
suffix:semicolon
)brace
)brace
)brace
)def_block
id|String
id|DFA4_eotS
op_assign
"&quot;&bslash;"
l_int|1
eof
(def_block
r_class
id|StaticImports
(brace
(def_block
r_double
id|radian
c_func
(paren
r_double
id|angle
)paren
(brace
r_return
id|cos
c_func
(paren
id|PI
op_star
id|angle
)paren
suffix:semicolon
)brace
)def_block
)brace
)def_block
eof
(def_block
r_class
id|ReportSummaryOfRecords
(brace
(def_block
r_void
id|setMaxImagesPerRecord
c_func
(paren
r_int
id|set
)paren
(brace
id|maxImagesPerRecord
op_assign
id|Math
dot
id|max
c_func
(paren
l_int|0
comma
id|set
)paren
suffix:semicolon
)brace
)def_block
(def_block
id|Document
id|start
c_func
(paren
id|Gedcom
id|gedcom
)paren
(brace
id|Document
id|doc
op_assign
r_new
id|Document
c_func
(paren
id|translate
c_func
(paren
l_string|&quot;title&quot;
comma
id|gedcom
dot
id|getName
c_func
(paren
)paren
)paren
)paren
suffix:semicolon
id|doc
dot
id|addText
c_func
(paren
id|translate
c_func
(paren
l_string|&quot;outputHeader&quot;
)paren
op_plus
l_string|&quot;: &quot;
op_plus
id|gedcom
dot
id|getName
c_func
(paren
)paren
)paren
suffix:semicolon
id|Pattern
id|tagFilter
op_assign
r_null
suffix:semicolon
r_try
(brace
r_if
c_cond
(paren
id|filterProperties
dot
m_length
OG
l_int|0
)paren
(brace
id|tagFilter
op_assign
id|Pattern
dot
id|compile
c_func
(paren
id|filterProperties
)paren
suffix:semicolon
)brace
)brace
r_catch
(paren
id|IllegalArgumentException
id|e
)paren
(brace
id|println
c_func
(paren
l_string|&quot;Filter for properties is not a valid regular expression (&quot;
op_plus
id|e
dot
id|getMessage
c_func
(paren
)paren
op_plus
l_string|&quot;)&quot;
)paren
suffix:semicolon
)brace
id|exportEntities
c_func
(paren
id|gedcom
dot
id|getEntities
c_func
(paren
id|Gedcom.INDI
comma
l_string|&quot;INDI:NAME&quot;
)paren
comma
id|doc
comma
id|tagFilter
)paren
suffix:semicolon
id|exportEntities
c_func
(paren
id|gedcom
dot
id|getEntities
c_func
(paren
id|Gedcom.FAM
comma
l_string|&quot;FAM:HUSB:*:..:NAME&quot;
)paren
comma
id|doc
comma
id|tagFilter
)paren
suffix:semicolon
id|doc
dot
id|nextPage
c_func
(paren
)paren
suffix:semicolon
r_return
id|doc
suffix:semicolon
)brace
)def_block
(def_block
r_void
id|exportEntities
c_func
(paren
id|Entity
(braket
)braket
id|ents
comma
id|Document
id|doc
comma
id|Pattern
id|tagFilter
)paren
(brace
r_for
c_loop
(paren
r_int
id|e
op_assign
l_int|0
suffix:semicolon
id|e
OL
id|ents
dot
m_length
suffix:semicolon
id|e
op_increment
)paren
(brace
id|exportEntity
c_func
(paren
id|ents
(braket
id|e
)braket
comma
id|doc
comma
id|tagFilter
)paren
suffix:semicolon
)brace
)brace
)def_block
(def_block
r_void
id|exportEntity
c_func
(paren
id|Entity
id|ent
comma
id|Document
id|doc
comma
id|Pattern
id|tagFilter
)paren
(brace
id|println
c_func
(paren
id|translate
c_func
(paren
l_string|&quot;exporting&quot;
comma
id|ent
dot
m_toString
c_func
(paren
)paren
)paren
)paren
suffix:semicolon
id|doc
dot
id|startSection
c_func
(paren
id|ent
dot
m_toString
c_func
(paren
id|includeIds
)paren
comma
id|ent
)paren
suffix:semicolon
id|doc
dot
id|startTable
c_func
(paren
l_string|&quot;width=100%&quot;
)paren
suffix:semicolon
id|doc
dot
id|addTableColumn
c_func
(paren
l_string|&quot;column-width=80%&quot;
)paren
suffix:semicolon
id|doc
dot
id|addTableColumn
c_func
(paren
l_string|&quot;column-width=20%&quot;
)paren
suffix:semicolon
id|exportProperties
c_func
(paren
id|ent
comma
id|doc
comma
id|tagFilter
comma
l_int|0
)paren
suffix:semicolon
id|doc
dot
id|nextTableCell
c_func
(paren
)paren
suffix:semicolon
id|Property
(braket
)braket
id|files
op_assign
id|ent
dot
id|getProperties
c_func
(paren
id|PATH2IMAGES
)paren
suffix:semicolon
r_for
c_loop
(paren
r_int
id|f
op_assign
l_int|0
suffix:semicolon
id|f
OL
id|files
dot
m_length
op_logical_and
id|f
OL
id|maxImagesPerRecord
suffix:semicolon
id|f
op_increment
)paren
(brace
id|PropertyFile
id|file
op_assign
(paren
id|PropertyFile
)paren
id|files
(braket
id|f
)braket
suffix:semicolon
id|doc
dot
id|addImage
c_func
(paren
id|file
dot
id|getFile
c_func
(paren
)paren
comma
l_string|&quot;&quot;
)paren
suffix:semicolon
)brace
id|doc
dot
id|endTable
c_func
(paren
)paren
suffix:semicolon
)brace
)def_block
(def_block
r_void
id|exportProperties
c_func
(paren
id|Property
id|of
comma
id|Document
id|doc
comma
id|Pattern
id|tagFilter
comma
r_int
id|level
)paren
(brace
r_if
c_cond
(paren
id|of
dot
id|getNoOfProperties
c_func
(paren
)paren
op_eq
l_int|0
)paren
(brace
r_return
suffix:semicolon
)brace
id|doc
dot
id|startList
c_func
(paren
)paren
suffix:semicolon
id|Property
(braket
)braket
id|props
op_assign
id|of
dot
id|getProperties
c_func
(paren
)paren
suffix:semicolon
r_if
c_cond
(paren
id|sortProperties
)paren
(brace
id|Arrays
dot
id|sort
c_func
(paren
id|props
comma
(def_block
r_new
id|Comparator
c_func
(paren
)paren
(brace
(def_block
r_int
id|compare
c_func
(paren
id|Object
id|p1
comma
id|Object
id|p2
)paren
(brace
r_return
id|Gedcom
dot
id|getName
c_func
(paren
(paren
(paren
id|Property
)paren
id|p1
)paren
dot
id|getTag
c_func
(paren
)paren
)paren
dot
m_compareTo
c_func
(paren
id|Gedcom
dot
id|getName
c_func
(paren
(paren
(paren
id|Property
)paren
id|p2
)paren
dot
id|getTag
c_func
(paren
)paren
)paren
)paren
suffix:semicolon
)brace
)def_block
)brace
)def_block
)paren
suffix:semicolon
)brace
r_for
c_loop
(paren
r_int
id|i
op_assign
l_int|0
suffix:semicolon
id|i
OL
id|props
dot
m_length
suffix:semicolon
id|i
op_increment
)paren
(brace
id|Property
id|prop
op_assign
id|props
(braket
id|i
)braket
suffix:semicolon
r_if
c_cond
(paren
id|tagFilter
op_ne
r_null
op_logical_and
id|tagFilter
dot
id|matcher
c_func
(paren
id|prop
dot
id|getTag
c_func
(paren
)paren
)paren
dot
id|matches
c_func
(paren
)paren
)paren
(brace
r_continue
suffix:semicolon
)brace
r_if
c_cond
(paren
id|prop
r_instanceof
id|PropertyXRef
)paren
(brace
id|PropertyXRef
id|xref
op_assign
(paren
id|PropertyXRef
)paren
id|prop
suffix:semicolon
r_if
c_cond
(paren
id|xref
dot
id|isTransient
c_func
(paren
)paren
op_logical_or
op_logical_neg
(paren
id|xref
dot
id|getTargetEntity
c_func
(paren
)paren
r_instanceof
id|Indi
op_logical_or
id|xref
dot
id|getTargetEntity
c_func
(paren
)paren
r_instanceof
id|Fam
op_logical_or
id|xref
dot
id|getTargetEntity
c_func
(paren
)paren
r_instanceof
id|Note
)paren
)paren
(brace
r_continue
suffix:semicolon
)brace
)brace
id|doc
dot
id|nextListItem
c_func
(paren
)paren
suffix:semicolon
r_if
c_cond
(paren
id|prop
r_instanceof
id|PropertyName
)paren
(brace
id|PropertyName
id|name
op_assign
(paren
id|PropertyName
)paren
id|prop
suffix:semicolon
id|doc
dot
id|addIndexTerm
c_func
(paren
id|translate
c_func
(paren
l_string|&quot;index.names&quot;
)paren
comma
id|name
dot
id|getLastName
c_func
(paren
)paren
comma
id|name
dot
id|getFirstName
c_func
(paren
)paren
)paren
suffix:semicolon
)brace
r_if
c_cond
(paren
id|generatePlaceIndex
OG
l_int|0
op_logical_and
(paren
id|prop
r_instanceof
id|PropertyPlace
)paren
)paren
(brace
id|String
id|index
op_assign
id|generatePlaceIndex
op_eq
l_int|1
ques
c_cond
id|translate
c_func
(paren
l_string|&quot;index.places&quot;
)paren
suffix:colon
id|translate
c_func
(paren
l_string|&quot;index.places.of&quot;
comma
id|prop
dot
id|getParent
c_func
(paren
)paren
dot
id|getPropertyName
c_func
(paren
)paren
)paren
suffix:semicolon
id|doc
dot
id|addIndexTerm
c_func
(paren
id|index
comma
(paren
(paren
id|PropertyPlace
)paren
id|prop
)paren
dot
id|getCity
c_func
(paren
)paren
)paren
suffix:semicolon
)brace
id|String
id|format
op_assign
l_string|&quot;&quot;
suffix:semicolon
r_if
c_cond
(paren
id|level
op_eq
l_int|0
)paren
(brace
id|format
op_assign
l_string|&quot;font-weight=bold&quot;
suffix:semicolon
)brace
r_if
c_cond
(paren
id|level
op_eq
l_int|1
)paren
(brace
id|format
op_assign
l_string|&quot;font-style=italic&quot;
suffix:semicolon
)brace
id|doc
dot
id|addText
c_func
(paren
id|Gedcom
dot
id|getName
c_func
(paren
id|prop
dot
id|getTag
c_func
(paren
)paren
)paren
comma
id|format
)paren
suffix:semicolon
id|doc
dot
id|addText
c_func
(paren
l_string|&quot; &quot;
)paren
suffix:semicolon
id|exportPropertyValue
c_func
(paren
id|prop
comma
id|doc
)paren
suffix:semicolon
id|exportProperties
c_func
(paren
id|prop
comma
id|doc
comma
id|tagFilter
comma
id|level
op_plus
l_int|1
)paren
suffix:semicolon
)brace
id|doc
dot
id|endList
c_func
(paren
)paren
suffix:semicolon
)brace
)def_block
(def_block
r_void
id|exportPropertyValue
c_func
(paren
id|Property
id|prop
comma
id|Document
id|doc
)paren
(brace
r_if
c_cond
(paren
id|prop
r_instanceof
id|PropertyXRef
)paren
(brace
id|PropertyXRef
id|xref
op_assign
(paren
id|PropertyXRef
)paren
id|prop
suffix:semicolon
id|Entity
id|ent
op_assign
id|xref
dot
id|getTargetEntity
c_func
(paren
)paren
suffix:semicolon
id|doc
dot
id|addLink
c_func
(paren
id|ent
dot
m_toString
c_func
(paren
id|includeIds
)paren
comma
id|ent
)paren
suffix:semicolon
r_return
suffix:semicolon
)brace
r_if
c_cond
(paren
id|prop
r_instanceof
id|MultiLineProperty
)paren
(brace
id|MultiLineProperty.Iterator
id|lines
op_assign
(paren
(paren
id|MultiLineProperty
)paren
id|prop
)paren
dot
id|getLineIterator
c_func
(paren
)paren
suffix:semicolon
r_do
(brace
id|doc
dot
id|addText
c_func
(paren
id|lines
dot
id|getValue
c_func
(paren
)paren
)paren
suffix:semicolon
)brace
r_while
c_loop
(paren
id|lines
dot
m_next
c_func
(paren
)paren
)paren
suffix:semicolon
r_return
suffix:semicolon
)brace
id|String
id|value
suffix:semicolon
r_if
c_cond
(paren
id|prop
r_instanceof
id|PropertyName
)paren
(brace
id|value
op_assign
(paren
(paren
id|PropertyName
)paren
id|prop
)paren
dot
id|getName
c_func
(paren
)paren
suffix:semicolon
)brace
r_else
(brace
id|value
op_assign
id|prop
dot
id|getDisplayValue
c_func
(paren
)paren
suffix:semicolon
)brace
id|doc
dot
id|addText
c_func
(paren
id|value
)paren
suffix:semicolon
)brace
)def_block
)brace
)def_block
eof
(def_block
r_class
id|WBModule
(brace
(def_block
r_boolean
id|synchronizesVariablesWithBindings
c_func
(paren
)paren
(brace
r_return
l_bool|false
suffix:semicolon
)brace
)def_block
(def_block
r_boolean
id|hasAction
c_func
(paren
)paren
(brace
r_if
c_cond
(paren
id|hasBinding
c_func
(paren
l_string|&quot;pageName&quot;
)paren
op_logical_or
id|hasBinding
c_func
(paren
l_string|&quot;action&quot;
)paren
)paren
(brace
r_return
l_bool|true
suffix:semicolon
)brace
r_return
l_bool|false
suffix:semicolon
)brace
)def_block
(def_block
id|String
id|filename
c_func
(paren
)paren
(brace
r_return
(paren
id|String
)paren
id|valueForBinding
c_func
(paren
l_string|&quot;filename&quot;
)paren
suffix:semicolon
)brace
)def_block
(def_block
id|String
id|framework
c_func
(paren
)paren
(brace
id|String
id|work
op_assign
(paren
id|String
)paren
id|valueForBinding
c_func
(paren
l_string|&quot;framework&quot;
)paren
suffix:semicolon
r_if
c_cond
(paren
id|work
dot
m_equals
c_func
(paren
l_string|&quot;app&quot;
)paren
)paren
(brace
id|work
op_assign
r_null
suffix:semicolon
)brace
r_return
id|work
suffix:semicolon
)brace
)def_block
(def_block
id|String
id|tableWidth
c_func
(paren
)paren
(brace
id|Object
id|value
op_assign
id|valueForBinding
c_func
(paren
l_string|&quot;tableWidth&quot;
)paren
suffix:semicolon
r_if
c_cond
(paren
id|value
op_ne
r_null
)paren
(brace
r_return
id|value
dot
m_toString
c_func
(paren
)paren
suffix:semicolon
)brace
r_return
r_null
suffix:semicolon
)brace
)def_block
(def_block
id|Number
id|borderWidth
c_func
(paren
)paren
(brace
id|Number
id|n
op_assign
(paren
id|Number
)paren
id|valueForBinding
c_func
(paren
l_string|&quot;borderWidth&quot;
)paren
suffix:semicolon
r_if
c_cond
(paren
id|n
op_eq
r_null
)paren
(brace
id|n
op_assign
r_new
id|Integer
c_func
(paren
l_int|2
)paren
suffix:semicolon
)brace
r_return
id|n
suffix:semicolon
)brace
)def_block
(def_block
id|String
id|borderColor
c_func
(paren
)paren
(brace
id|String
id|color
op_assign
(paren
id|String
)paren
id|valueForBinding
c_func
(paren
l_string|&quot;borderColor&quot;
)paren
suffix:semicolon
r_if
c_cond
(paren
id|color
op_eq
r_null
)paren
(brace
id|color
op_assign
l_string|&quot;#000000&quot;
suffix:semicolon
)brace
r_return
id|color
suffix:semicolon
)brace
)def_block
(def_block
id|String
id|contentBGColor
c_func
(paren
)paren
(brace
id|String
id|color
op_assign
(paren
id|String
)paren
id|valueForBinding
c_func
(paren
l_string|&quot;contentBGColor&quot;
)paren
suffix:semicolon
r_if
c_cond
(paren
id|color
op_eq
r_null
)paren
(brace
id|color
op_assign
l_string|&quot;#FFFFFF&quot;
suffix:semicolon
)brace
r_return
id|color
suffix:semicolon
)brace
)def_block
(def_block
r_boolean
id|showContent
c_func
(paren
)paren
(brace
r_if
c_cond
(paren
id|hasBinding
c_func
(paren
l_string|&quot;showContent&quot;
)paren
)paren
(brace
r_return
(paren
(paren
id|Boolean
)paren
id|valueForBinding
c_func
(paren
l_string|&quot;showContent&quot;
)paren
)paren
dot
id|booleanValue
c_func
(paren
)paren
suffix:semicolon
)brace
r_return
l_bool|true
suffix:semicolon
)brace
)def_block
(def_block
r_boolean
id|showHeader
c_func
(paren
)paren
(brace
r_if
c_cond
(paren
id|hasBinding
c_func
(paren
l_string|&quot;showHeader&quot;
)paren
)paren
(brace
r_return
(paren
(paren
id|Boolean
)paren
id|valueForBinding
c_func
(paren
l_string|&quot;showHeader&quot;
)paren
)paren
dot
id|booleanValue
c_func
(paren
)paren
suffix:semicolon
)brace
r_return
l_bool|false
suffix:semicolon
)brace
)def_block
(def_block
id|String
id|view
c_func
(paren
)paren
(brace
id|String
id|str
op_assign
r_null
suffix:semicolon
r_if
c_cond
(paren
id|hasBinding
c_func
(paren
l_string|&quot;view&quot;
)paren
)paren
(brace
id|str
op_assign
(paren
id|String
)paren
id|valueForBinding
c_func
(paren
l_string|&quot;view&quot;
)paren
suffix:semicolon
)brace
r_else
(brace
id|str
op_assign
l_string|&quot;NORTH&quot;
suffix:semicolon
)brace
r_return
id|str
suffix:semicolon
)brace
)def_block
(def_block
id|WOComponent
id|action
c_func
(paren
)paren
(brace
id|WOComponent
id|aComponent
op_assign
r_null
suffix:semicolon
r_if
c_cond
(paren
id|hasBinding
c_func
(paren
l_string|&quot;pageName&quot;
)paren
)paren
(brace
id|String
id|aPageName
op_assign
(paren
id|String
)paren
id|valueForBinding
c_func
(paren
l_string|&quot;pageName&quot;
)paren
suffix:semicolon
id|aComponent
op_assign
id|pageWithName
c_func
(paren
id|aPageName
)paren
suffix:semicolon
)brace
r_else
(brace
id|aComponent
op_assign
(paren
id|WOComponent
)paren
id|valueForBinding
c_func
(paren
l_string|&quot;action&quot;
)paren
suffix:semicolon
)brace
r_return
id|aComponent
suffix:semicolon
)brace
)def_block
(def_block
r_boolean
id|isNorthView
c_func
(paren
)paren
(brace
r_if
c_cond
(paren
op_logical_neg
id|isWestView
c_func
(paren
)paren
)paren
(brace
r_return
l_bool|true
suffix:semicolon
)brace
r_return
l_bool|false
suffix:semicolon
)brace
)def_block
(def_block
r_boolean
id|isWestView
c_func
(paren
)paren
(brace
r_if
c_cond
(paren
id|view
c_func
(paren
)paren
dot
id|toUpperCase
c_func
(paren
)paren
dot
m_equals
c_func
(paren
l_string|&quot;WEST&quot;
)paren
)paren
(brace
r_return
l_bool|true
suffix:semicolon
)brace
r_return
l_bool|false
suffix:semicolon
)brace
)def_block
)brace
)def_block
eof
(def_block
r_class
id|cpp_typedef_runme
(brace
(brace
r_try
(brace
id|System
dot
id|loadLibrary
c_func
(paren
l_string|&quot;cpp_typedef&quot;
)paren
suffix:semicolon
)brace
r_catch
(paren
id|UnsatisfiedLinkError
id|e
)paren
(brace
id|System.err
dot
id|println
c_func
(paren
l_string|&quot;Native code library failed to load. See the chapter on Dynamic Linking Problems in the SWIG Java documentation for help.&bslash;n&quot;
op_plus
id|e
)paren
suffix:semicolon
id|System
dot
id|exit
c_func
(paren
l_int|1
)paren
suffix:semicolon
)brace
)brace
(def_block
r_void
id|main
c_func
(paren
id|String
id|argv
(braket
)braket
)paren
(brace
id|Foo
id|f
op_assign
r_new
id|Foo
c_func
(paren
)paren
suffix:semicolon
id|SWIGTYPE_p_Bar
id|pbar
op_assign
id|f
dot
id|bar
c_func
(paren
)paren
suffix:semicolon
id|pbar
op_assign
id|Foo
dot
id|sbar
c_func
(paren
)paren
suffix:semicolon
id|Test
id|test
op_assign
r_new
id|Test
c_func
(paren
)paren
suffix:semicolon
id|UnnamedStruct
id|unnamed
op_assign
r_new
id|UnnamedStruct
c_func
(paren
)paren
suffix:semicolon
id|TypedefNamedStruct
id|named
op_assign
r_new
id|TypedefNamedStruct
c_func
(paren
)paren
suffix:semicolon
id|UnnamedStruct
id|unnamed2
op_assign
id|test
dot
id|test1
c_func
(paren
id|unnamed
)paren
suffix:semicolon
id|TypedefNamedStruct
id|named2
op_assign
id|test
dot
id|test2
c_func
(paren
id|named
)paren
suffix:semicolon
id|TypedefNamedStruct
id|named3
op_assign
id|test
dot
id|test3
c_func
(paren
id|named
)paren
suffix:semicolon
id|TypedefNamedStruct
id|named4
op_assign
id|test
dot
id|test4
c_func
(paren
id|named
)paren
suffix:semicolon
)brace
)def_block
)brace
)def_block
eof
id|module
id|DuplicateClassInclude1
(brace
r_class
id|A
suffix:semicolon
)brace
eof
(def_block
r_class
id|ImageDumper
(brace
(def_block
r_void
id|displayMetadata
c_func
(paren
id|Node
id|root
)paren
(brace
id|displayMetadata
c_func
(paren
id|root
comma
l_int|0
)paren
suffix:semicolon
)brace
)def_block
(def_block
r_void
id|indent
c_func
(paren
r_int
id|level
)paren
(brace
r_for
c_loop
(paren
r_int
id|i
op_assign
l_int|0
suffix:semicolon
id|i
OL
id|level
suffix:semicolon
id|i
op_increment
)paren
(brace
id|System.out
dot
id|print
c_func
(paren
l_string|&quot;  &quot;
)paren
suffix:semicolon
)brace
)brace
)def_block
(def_block
r_void
id|displayMetadata
c_func
(paren
id|Node
id|node
comma
r_int
id|level
)paren
(brace
id|indent
c_func
(paren
id|level
)paren
suffix:semicolon
id|System.out
dot
id|print
c_func
(paren
l_string|&quot;&lt;&quot;
op_plus
id|node
dot
id|getNodeName
c_func
(paren
)paren
)paren
suffix:semicolon
id|NamedNodeMap
id|map
op_assign
id|node
dot
id|getAttributes
c_func
(paren
)paren
suffix:semicolon
r_if
c_cond
(paren
id|map
op_ne
r_null
)paren
(brace
r_int
m_length
op_assign
id|map
dot
id|getLength
c_func
(paren
)paren
suffix:semicolon
r_for
c_loop
(paren
r_int
id|i
op_assign
l_int|0
suffix:semicolon
id|i
OL
m_length
suffix:semicolon
id|i
op_increment
)paren
(brace
id|Node
id|attr
op_assign
id|map
dot
id|item
c_func
(paren
id|i
)paren
suffix:semicolon
id|System.out
dot
id|print
c_func
(paren
l_string|&quot; &quot;
op_plus
id|attr
dot
id|getNodeName
c_func
(paren
)paren
op_plus
l_string|&quot;=&bslash;&quot;&quot;
op_plus
id|attr
dot
id|getNodeValue
c_func
(paren
)paren
op_plus
l_string|&quot;&bslash;&quot;&quot;
)paren
suffix:semicolon
)brace
)brace
r_if
c_cond
(paren
id|node
r_instanceof
id|IIOMetadataNode
)paren
(brace
id|Object
id|o
op_assign
(paren
(paren
id|IIOMetadataNode
)paren
id|node
)paren
dot
id|getUserObject
c_func
(paren
)paren
suffix:semicolon
r_if
c_cond
(paren
id|o
op_ne
r_null
)paren
(brace
id|System.out
dot
id|print
c_func
(paren
l_string|&quot; userObject=&bslash;&quot;&quot;
)paren
suffix:semicolon
id|System.out
dot
id|print
c_func
(paren
id|o
dot
m_getClass
c_func
(paren
)paren
dot
id|getName
c_func
(paren
)paren
)paren
suffix:semicolon
r_if
c_cond
(paren
id|o
r_instanceof
r_byte
(braket
)braket
)paren
(brace
r_byte
(braket
)braket
id|b
op_assign
(paren
r_byte
(braket
)braket
)paren
id|o
suffix:semicolon
r_for
c_loop
(paren
r_int
id|i
op_assign
l_int|0
suffix:semicolon
id|i
OL
id|b
dot
m_length
suffix:semicolon
id|i
op_increment
)paren
(brace
id|System.out
dot
id|print
c_func
(paren
l_string|&quot; &quot;
)paren
suffix:semicolon
id|System.out
dot
id|print
c_func
(paren
id|b
(braket
id|i
)braket
op_amp
l_int|0xff
)paren
suffix:semicolon
)brace
)brace
r_else
(brace
)brace
id|System.out
dot
id|print
c_func
(paren
l_string|&quot;&bslash;&quot;)&quot;
)paren
suffix:semicolon
)brace
)brace
id|Node
id|child
op_assign
id|node
dot
id|getFirstChild
c_func
(paren
)paren
suffix:semicolon
r_if
c_cond
(paren
id|child
op_ne
r_null
)paren
(brace
id|System.out
dot
id|println
c_func
(paren
l_string|&quot;&gt;&quot;
)paren
suffix:semicolon
r_while
c_loop
(paren
id|child
op_ne
r_null
)paren
(brace
id|displayMetadata
c_func
(paren
id|child
comma
id|level
op_plus
l_int|1
)paren
suffix:semicolon
id|child
op_assign
id|child
dot
id|getNextSibling
c_func
(paren
)paren
suffix:semicolon
)brace
id|indent
c_func
(paren
id|level
)paren
suffix:semicolon
id|System.out
dot
id|println
c_func
(paren
l_string|&quot;&lt;/&quot;
op_plus
id|node
dot
id|getNodeName
c_func
(paren
)paren
op_plus
l_string|&quot;&gt;&quot;
)paren
suffix:semicolon
)brace
r_else
(brace
id|System.out
dot
id|println
c_func
(paren
l_string|&quot;/&gt;&quot;
)paren
suffix:semicolon
)brace
)brace
)def_block
(def_block
id|ImageDumper
c_func
(paren
id|File
id|f
)paren
(brace
id|System.out
dot
id|println
c_func
(paren
l_string|&quot;&bslash;n********** &quot;
op_plus
id|f
op_plus
l_string|&quot;:&quot;
)paren
suffix:semicolon
id|ImageInputStream
id|iis
op_assign
r_null
suffix:semicolon
r_try
(brace
id|iis
op_assign
id|ImageIO
dot
id|createImageInputStream
c_func
(paren
id|f
)paren
suffix:semicolon
)brace
r_catch
(paren
id|IOException
id|ioe
)paren
(brace
id|System.out
dot
id|println
c_func
(paren
l_string|&quot;I/O exception obtaining a stream!&quot;
)paren
suffix:semicolon
id|System
dot
id|exit
c_func
(paren
l_int|0
)paren
suffix:semicolon
)brace
r_if
c_cond
(paren
id|iis
op_eq
r_null
)paren
(brace
id|System.out
dot
id|println
c_func
(paren
l_string|&quot;Unable to get a stream!&quot;
)paren
suffix:semicolon
id|System
dot
id|exit
c_func
(paren
l_int|0
)paren
suffix:semicolon
)brace
id|Iterator
id|iter
op_assign
id|ImageIO
dot
id|getImageReaders
c_func
(paren
id|iis
)paren
suffix:semicolon
id|ImageReader
id|reader
op_assign
r_null
suffix:semicolon
r_while
c_loop
(paren
id|iter
dot
m_hasNext
c_func
(paren
)paren
)paren
(brace
id|reader
op_assign
(paren
id|ImageReader
)paren
id|iter
dot
m_next
c_func
(paren
)paren
suffix:semicolon
id|System.out
dot
id|println
c_func
(paren
l_string|&quot;Using &quot;
op_plus
id|reader
dot
m_getClass
c_func
(paren
)paren
dot
id|getName
c_func
(paren
)paren
op_plus
l_string|&quot; to read.&quot;
)paren
suffix:semicolon
r_break
suffix:semicolon
)brace
r_if
c_cond
(paren
id|reader
op_eq
r_null
)paren
(brace
id|System.err
dot
id|println
c_func
(paren
l_string|&quot;Unable to find a reader!&quot;
)paren
suffix:semicolon
id|System
dot
id|exit
c_func
(paren
l_int|0
)paren
suffix:semicolon
)brace
id|reader
dot
id|setInput
c_func
(paren
id|iis
comma
l_bool|true
)paren
suffix:semicolon
r_int
id|numImages
op_assign
id|reader
dot
id|getNumImages
c_func
(paren
l_bool|true
)paren
suffix:semicolon
id|System.out
dot
id|println
c_func
(paren
l_string|&quot;&bslash;nThe file contains &quot;
op_plus
id|numImages
op_plus
l_string|&quot; image&quot;
op_plus
(paren
id|numImages
op_eq
l_int|1
ques
c_cond
l_string|&quot;&quot;
suffix:colon
l_string|&quot;s&quot;
)paren
op_plus
l_string|&quot;.&quot;
)paren
suffix:semicolon
id|System.out
dot
id|println
c_func
(paren
)paren
suffix:semicolon
id|IIOMetadata
id|sm
op_assign
id|reader
dot
id|getStreamMetadata
c_func
(paren
)paren
suffix:semicolon
r_if
c_cond
(paren
id|sm
op_eq
r_null
)paren
(brace
id|System.out
dot
id|println
c_func
(paren
l_string|&quot;The file contains no stream metadata.&quot;
)paren
suffix:semicolon
)brace
r_else
(brace
id|System.out
dot
id|println
c_func
(paren
l_string|&quot;Stream metadata:&quot;
)paren
suffix:semicolon
id|String
id|nativeFormatName
op_assign
id|sm
dot
id|getNativeMetadataFormatName
c_func
(paren
)paren
suffix:semicolon
id|displayMetadata
c_func
(paren
id|sm
dot
id|getAsTree
c_func
(paren
id|nativeFormatName
)paren
)paren
suffix:semicolon
id|String
(braket
)braket
id|extraFormatNames
op_assign
id|sm
dot
id|getExtraMetadataFormatNames
c_func
(paren
)paren
suffix:semicolon
r_if
c_cond
(paren
id|extraFormatNames
op_ne
r_null
)paren
(brace
r_for
c_loop
(paren
r_int
id|i
op_assign
l_int|0
suffix:semicolon
id|i
OL
id|extraFormatNames
dot
m_length
suffix:semicolon
op_increment
id|i
)paren
(brace
id|System.out
dot
id|println
c_func
(paren
l_string|&quot;Extra Stream metadata - &quot;
op_plus
id|extraFormatNames
(braket
id|i
)braket
)paren
suffix:semicolon
id|displayMetadata
c_func
(paren
id|sm
dot
id|getAsTree
c_func
(paren
id|extraFormatNames
(braket
id|i
)braket
)paren
)paren
suffix:semicolon
)brace
)brace
)brace
r_for
c_loop
(paren
r_int
id|i
op_assign
l_int|0
suffix:semicolon
id|i
OL
id|numImages
suffix:semicolon
id|i
op_increment
)paren
(brace
id|System.out
dot
id|println
c_func
(paren
l_string|&quot;&bslash;n---------- Image #&quot;
op_plus
id|i
op_plus
l_string|&quot; ----------&quot;
)paren
suffix:semicolon
id|System.out
dot
id|println
c_func
(paren
)paren
suffix:semicolon
r_int
id|width
op_assign
id|reader
dot
id|getWidth
c_func
(paren
id|i
)paren
suffix:semicolon
id|System.out
dot
id|println
c_func
(paren
l_string|&quot;width = &quot;
op_plus
id|width
)paren
suffix:semicolon
r_int
id|height
op_assign
id|reader
dot
id|getHeight
c_func
(paren
id|i
)paren
suffix:semicolon
id|System.out
dot
id|println
c_func
(paren
l_string|&quot;height = &quot;
op_plus
id|height
)paren
suffix:semicolon
r_int
id|numThumbnails
op_assign
id|reader
dot
id|getNumThumbnails
c_func
(paren
id|i
)paren
suffix:semicolon
id|System.out
dot
id|println
c_func
(paren
l_string|&quot;numThumbnails = &quot;
op_plus
id|numThumbnails
)paren
suffix:semicolon
r_for
c_loop
(paren
r_int
id|j
op_assign
l_int|0
suffix:semicolon
id|i
OL
id|numThumbnails
suffix:semicolon
id|j
op_increment
)paren
(brace
id|System.out
dot
id|println
c_func
(paren
l_string|&quot;  width = &quot;
op_plus
id|reader
dot
id|getThumbnailWidth
c_func
(paren
id|i
comma
id|j
)paren
op_plus
l_string|&quot;, height = &quot;
op_plus
id|reader
dot
id|getThumbnailHeight
c_func
(paren
id|i
comma
id|j
)paren
)paren
suffix:semicolon
)brace
id|IIOMetadata
id|im
op_assign
id|reader
dot
id|getImageMetadata
c_func
(paren
id|i
)paren
suffix:semicolon
r_if
c_cond
(paren
id|im
op_eq
r_null
)paren
(brace
id|System.out
dot
id|println
c_func
(paren
l_string|&quot;&bslash;nThe image has no metadata.&quot;
)paren
suffix:semicolon
)brace
r_else
(brace
id|System.out
dot
id|println
c_func
(paren
l_string|&quot;&bslash;nImage metadata:&quot;
)paren
suffix:semicolon
id|String
id|nativeFormatName
op_assign
id|im
dot
id|getNativeMetadataFormatName
c_func
(paren
)paren
suffix:semicolon
id|displayMetadata
c_func
(paren
id|im
dot
id|getAsTree
c_func
(paren
id|nativeFormatName
)paren
)paren
suffix:semicolon
)brace
)brace
)brace
)def_block
(def_block
r_void
id|main
c_func
(paren
id|String
(braket
)braket
id|args
)paren
(brace
r_if
c_cond
(paren
id|args
dot
m_length
OL
l_int|1
)paren
(brace
id|System.err
dot
id|println
c_func
(paren
l_string|&quot;usage: java ImageDumper filename [...]&quot;
)paren
suffix:semicolon
)brace
r_for
c_loop
(paren
r_int
id|i
op_assign
l_int|0
suffix:semicolon
id|i
OL
id|args
dot
m_length
suffix:semicolon
id|i
op_increment
)paren
(brace
id|File
id|f
op_assign
r_new
id|File
c_func
(paren
id|args
(braket
id|i
)braket
)paren
suffix:semicolon
r_if
c_cond
(paren
op_logical_neg
id|f
dot
id|exists
c_func
(paren
)paren
)paren
(brace
id|System.out
dot
id|println
c_func
(paren
l_string|&quot;File &quot;
op_plus
id|f
op_plus
l_string|&quot; does not exist!&quot;
)paren
suffix:semicolon
id|System
dot
id|exit
c_func
(paren
l_int|0
)paren
suffix:semicolon
)brace
r_try
(brace
r_new
id|ImageDumper
c_func
(paren
id|f
)paren
suffix:semicolon
)brace
r_catch
(paren
id|IOException
id|io
)paren
(brace
id|System.err
dot
id|println
c_func
(paren
l_string|&quot;IOException: &quot;
op_plus
id|io
)paren
suffix:semicolon
)brace
)brace
)brace
)def_block
)brace
)def_block
eof
(def_block
r_class
id|Kettenglied
(brace
(def_block
id|Kettenglied
c_func
(paren
)paren
(brace
id|this
c_func
(paren
r_null
)paren
suffix:semicolon
)brace
)def_block
(def_block
id|Kettenglied
c_func
(paren
id|Object
id|daten
)paren
(brace
id|daten
op_assign
id|daten
suffix:semicolon
id|vor
op_assign
id|nach
op_assign
r_null
suffix:semicolon
)brace
)def_block
)brace
)def_block
eof
eof
(def_block
r_class
id|OPT_InstrumentedEventCounterManager
(brace
)brace
)def_block
eof
(def_block
r_class
id|Enable
(brace
(def_block
id|Enable
c_func
(paren
)paren
(brace
)brace
)def_block
(def_block
r_void
id|parse_command
c_func
(paren
id|Core
id|C
comma
id|R
id|Bot
comma
id|String
id|numeric
comma
id|String
id|botnum
comma
id|String
id|username
comma
id|String
id|params
)paren
(brace
r_try
(brace
id|String
id|result
(braket
)braket
op_assign
id|params
dot
id|split
c_func
(paren
l_string|&quot;&bslash;&bslash;s&quot;
)paren
suffix:semicolon
r_int
id|enable
op_assign
id|Integer
dot
id|parseInt
c_func
(paren
id|result
(braket
l_int|1
)braket
)paren
suffix:semicolon
id|CoreDBControl
id|dbc
op_assign
id|C
dot
id|get_dbc
c_func
(paren
)paren
suffix:semicolon
id|String
id|user
(braket
)braket
op_assign
id|dbc
dot
id|getUserRow
c_func
(paren
id|username
)paren
suffix:semicolon
r_if
c_cond
(paren
id|user
(braket
l_int|5
)braket
dot
m_equals
c_func
(paren
l_string|&quot;1&quot;
)paren
)paren
(brace
r_switch
c_cond
(paren
id|enable
)paren
(brace
r_case
l_int|0
suffix:colon
(brace
id|Bot
dot
id|enable
c_func
(paren
l_bool|false
)paren
suffix:semicolon
id|C
dot
id|cmd_notice
c_func
(paren
id|numeric
comma
id|botnum
comma
id|username
comma
l_string|&quot;Bot requests are now disabled&quot;
)paren
suffix:semicolon
id|C
dot
id|report
c_func
(paren
id|user
(braket
l_int|1
)braket
op_plus
l_string|&quot; has disabled &quot;
op_plus
id|Bot
dot
id|get_nick
c_func
(paren
)paren
)paren
suffix:semicolon
)brace
r_case
l_int|1
suffix:colon
(brace
id|Bot
dot
id|enable
c_func
(paren
l_bool|true
)paren
suffix:semicolon
id|C
dot
id|cmd_notice
c_func
(paren
id|numeric
comma
id|botnum
comma
id|username
comma
l_string|&quot;Bot requests are now enabled&quot;
)paren
suffix:semicolon
id|C
dot
id|report
c_func
(paren
id|user
(braket
l_int|1
)braket
op_plus
l_string|&quot; has enabled &quot;
op_plus
id|Bot
dot
id|get_nick
c_func
(paren
)paren
)paren
suffix:semicolon
)brace
r_default
suffix:colon
(brace
id|C
dot
id|cmd_notice
c_func
(paren
id|numeric
comma
id|botnum
comma
id|username
comma
l_string|&quot;/msg &quot;
op_plus
id|Bot
dot
id|get_nick
c_func
(paren
)paren
op_plus
l_string|&quot; enable &lt;0|1&gt;&quot;
)paren
suffix:semicolon
)brace
)brace
r_return
suffix:semicolon
)brace
r_else
(brace
id|C
dot
id|cmd_notice
c_func
(paren
id|numeric
comma
id|botnum
comma
id|username
comma
l_string|&quot;This command is either unknown, or you need to be opered up to use it.&quot;
)paren
suffix:semicolon
r_return
suffix:semicolon
)brace
)brace
r_catch
(paren
id|Exception
id|e
)paren
(brace
id|C
dot
id|cmd_notice
c_func
(paren
id|numeric
comma
id|botnum
comma
id|username
comma
l_string|&quot;/msg &quot;
op_plus
id|Bot
dot
id|get_nick
c_func
(paren
)paren
op_plus
l_string|&quot; enable &lt;0|1&gt;&quot;
)paren
suffix:semicolon
)brace
)brace
)def_block
(def_block
r_void
id|parse_help
c_func
(paren
id|Core
id|C
comma
id|R
id|Bot
comma
id|String
id|numeric
comma
id|String
id|botnum
comma
id|String
id|username
comma
r_int
id|lev
)paren
(brace
r_if
c_cond
(paren
id|lev
OG
l_int|99
)paren
(brace
id|C
dot
id|cmd_notice
c_func
(paren
id|numeric
comma
id|botnum
comma
id|username
comma
l_string|&quot;/msg &quot;
op_plus
id|Bot
dot
id|get_nick
c_func
(paren
)paren
op_plus
l_string|&quot; enable &lt;0|1&gt;&quot;
)paren
suffix:semicolon
)brace
)brace
)def_block
(def_block
r_void
id|showcommand
c_func
(paren
id|Core
id|C
comma
id|R
id|Bot
comma
id|String
id|numeric
comma
id|String
id|botnum
comma
id|String
id|username
comma
r_int
id|lev
)paren
(brace
r_if
c_cond
(paren
id|lev
OG
l_int|99
)paren
(brace
id|C
dot
id|cmd_notice
c_func
(paren
id|numeric
comma
id|botnum
comma
id|username
comma
l_string|&quot;ENABLE              Enable the request system. - level 100&quot;
)paren
suffix:semicolon
)brace
)brace
)def_block
)brace
)def_block
eof
(def_block
r_class
id|GPS
(brace
(def_block
id|GPS
c_func
(paren
id|TextField
id|lfa
comma
id|EPS3W
id|eps
)paren
(brace
id|theEPS
op_assign
id|eps
suffix:semicolon
id|loadFileArea
op_assign
id|lfa
suffix:semicolon
)brace
)def_block
(def_block
r_boolean
id|NMEArunning
c_func
(paren
)paren
(brace
r_return
id|NMEAThread
op_ne
r_null
suffix:semicolon
)brace
)def_block
(def_block
r_void
id|setup
c_func
(paren
id|CMenu
id|mm
)paren
(brace
id|GMenv.dgpsPortMI
dot
id|update
c_func
(paren
id|GMenv.dgpsPort
)paren
suffix:semicolon
id|GMenv.dgpsSrvMI
dot
id|update
c_func
(paren
id|GMenv.dgpsServer
)paren
suffix:semicolon
id|NMEAIntervalM
op_assign
r_new
id|Menu
c_func
(paren
l_string|&quot;NMEA update interval&quot;
)paren
suffix:semicolon
id|NMEAIntervalM
dot
id|addActionListener
c_func
(paren
r_new
id|NMEAIntervalListener
c_func
(paren
)paren
)paren
suffix:semicolon
r_for
c_loop
(paren
r_int
id|fi
op_assign
l_int|0
suffix:semicolon
id|fi
op_le
l_int|10
suffix:semicolon
id|fi
op_add_assign
l_int|2
)paren
(brace
id|NMEAIntervalM
dot
id|add
c_func
(paren
l_string|&quot;&quot;
op_plus
id|fi
)paren
suffix:semicolon
)brace
id|NMEAIntervalM
dot
id|add
c_func
(paren
l_string|&quot;15&quot;
)paren
suffix:semicolon
id|NMEAIntervalM
dot
id|add
c_func
(paren
l_string|&quot;30&quot;
)paren
suffix:semicolon
id|NMEAIntervalM
dot
id|add
c_func
(paren
l_string|&quot;60&quot;
)paren
suffix:semicolon
id|NMEAIntervalM
dot
id|add
c_func
(paren
l_string|&quot;120&quot;
)paren
suffix:semicolon
id|grmInMI
dot
id|setName
c_func
(paren
l_string|&quot;input WP + Route + track from GPS Unit&quot;
)paren
suffix:semicolon
id|myMenu
op_assign
id|mm
suffix:semicolon
id|javaCommOK
op_assign
id|GMenv.GPSconnect
suffix:semicolon
r_if
c_cond
(paren
id|GMenv.commAPI
dot
m_equals
c_func
(paren
l_string|&quot;sttyapi&quot;
)paren
)paren
(brace
id|portName
dot
id|update
c_func
(paren
id|GMenv.sportName
)paren
suffix:semicolon
id|myMenu
dot
id|add
c_func
(paren
id|portName
)paren
suffix:semicolon
)brace
r_else
(brace
r_try
(brace
id|theCommSelect
dot
id|update
c_func
(paren
id|GMenv.sportName
)paren
suffix:semicolon
id|myMenu
dot
id|add
c_func
(paren
id|theCommSelect
)paren
suffix:semicolon
)brace
r_catch
(paren
id|NoClassDefFoundError
id|cnfe
)paren
(brace
id|javaCommOK
op_assign
l_bool|false
suffix:semicolon
id|System.out
dot
id|println
c_func
(paren
l_string|&quot;No JAVA Communication API: &quot;
)paren
suffix:semicolon
)brace
r_catch
(paren
id|ExceptionInInitializerError
id|eie
)paren
(brace
id|System.out
dot
id|println
c_func
(paren
l_string|&quot;Securety problem while accessing port. Netscape? &quot;
)paren
suffix:semicolon
)brace
r_catch
(paren
id|Exception
id|cnfe
)paren
(brace
id|javaCommOK
op_assign
l_bool|false
suffix:semicolon
id|System.out
dot
id|println
c_func
(paren
l_string|&quot;CNF No JAVA Communication API: &quot;
)paren
suffix:semicolon
)brace
)brace
id|Garmincomm
dot
id|setup
c_func
(paren
)paren
suffix:semicolon
id|GMenv.dgpsPortMI.loadFileArea
op_assign
id|loadFileArea
suffix:semicolon
id|GMenv.dgpsSrvMI.loadFileArea
op_assign
id|loadFileArea
suffix:semicolon
id|mDgps
dot
id|add
c_func
(paren
id|GMenv.dgpsSrvMI
)paren
suffix:semicolon
id|mDgps
dot
id|add
c_func
(paren
id|GMenv.dgpsPortMI
)paren
suffix:semicolon
id|grmInMI
dot
id|addActionListener
c_func
(paren
id|grmInWPListener
)paren
suffix:semicolon
id|grmInMI
dot
id|addActionListener
c_func
(paren
id|grmInRouteListener
)paren
suffix:semicolon
id|grmInMI
dot
id|addActionListener
c_func
(paren
id|grmInTrackListener
)paren
suffix:semicolon
id|grmOutMI
dot
id|addActionListener
c_func
(paren
id|grmOutWPListener
)paren
suffix:semicolon
id|grmOutMI
dot
id|addActionListener
c_func
(paren
id|grmOutRouteListener
)paren
suffix:semicolon
id|grmOutMI
dot
id|addActionListener
c_func
(paren
id|grmOutTrackListener
)paren
suffix:semicolon
id|grmInWPMI
dot
id|addActionListener
c_func
(paren
id|grmInWPListener
)paren
suffix:semicolon
id|grmInTrackMI
dot
id|addActionListener
c_func
(paren
id|grmInTrackListener
)paren
suffix:semicolon
id|grmInRouteMI
dot
id|addActionListener
c_func
(paren
id|grmInRouteListener
)paren
suffix:semicolon
id|grmOutWPMI
dot
id|addActionListener
c_func
(paren
id|grmOutWPListener
)paren
suffix:semicolon
id|grmOutTrackMI
dot
id|addActionListener
c_func
(paren
id|grmOutTrackListener
)paren
suffix:semicolon
id|grmOutRouteMI
dot
id|addActionListener
c_func
(paren
id|grmOutRouteListener
)paren
suffix:semicolon
id|NMEAMI
dot
id|addActionListener
c_func
(paren
r_new
id|NMEAMIAC
c_func
(paren
)paren
)paren
suffix:semicolon
id|DGPSIPMI
dot
id|addActionListener
c_func
(paren
r_new
